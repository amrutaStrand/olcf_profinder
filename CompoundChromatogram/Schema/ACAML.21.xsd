<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:acaml="urn:schemas-agilent-com:acaml21" targetNamespace="urn:schemas-agilent-com:acaml21" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<!---->
	<!--Schema for ACAML 2.1 (Agilent Common Analytical Markup Language).-->
	<!--(c) Agilent Technologies  2005 - 2015-->
	<!---->
	<!--Build: 2.1.27.0 -->
	<!---->
	<!--******************************************* Definitions for document-objects of ACAML (Agilent Common Analytical Markup Language).******************************************* -->
	<!---->
	<!--The root-element of each ACAML-document.-->
	<xs:element name="ACAML">
		<xs:annotation>
			<xs:documentation>Root element for ACAML (Agilent Common Analytical Markup Language).</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Checksum" type="acaml:DocChecksumType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Integrity value of  document.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="MigrationHistory" type="acaml:MigrationHistoryType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Keep track, how the document was migrated.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Doc" type="acaml:DocType">
					<xs:annotation>
						<xs:documentation>The document: keep methods, instruments, setups acquired data and results.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!---->
	<!--Types to aggregate setups, measurement-data and results for contexts, samples and injections.-->
	<xs:complexType name="SampleContextsType">
		<xs:annotation>
			<xs:documentation>Describe all sample-context-based information (setup-, measurement-data- and result-context).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Setup" type="acaml:SampleSetupContextType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>SampleSetupContext-items.</xs:documentation>
				</xs:annotation>
				<xs:key name="UK_SampleSetupContext_SampleSetup_IDs">
					<xs:annotation>
						<xs:documentation>Avoid duplicates in SampleSetup_ID-collection.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:SampleSetup_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
			</xs:element>
			<xs:element name="MeasData" type="acaml:SampleMeasDataContextType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>SampleMeasDataContext-items.</xs:documentation>
				</xs:annotation>
				<xs:key name="UK_SampleContexts_SampleMeasData_IDs">
					<xs:annotation>
						<xs:documentation>Avoid duplicates in SampleMeasData_ID-collection.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:SampleMeasData_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SamplesType">
		<xs:annotation>
			<xs:documentation>Describe all sample-based information (setup, meas-data and result).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Setup" type="acaml:SampleSetupType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>SampleSetup-items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MeasData" type="acaml:SampleMeasDataType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>SampleMeasData-items.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InjectionsType">
		<xs:annotation>
			<xs:documentation>Describe all injection-based information (setup, meas-data and result).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MeasData" type="acaml:InjectionMeasDataType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>InjectionMeasData-items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Result" type="acaml:InjectionResultType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>InjectionResult-items.</xs:documentation>
				</xs:annotation>
				<xs:key name="UK_InjectionSignalResults">
					<xs:annotation>
						<xs:documentation>Ensure unique InjectionSignalResult-IDs in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:SignalResult"/>
					<xs:field xpath="@id"/>
				</xs:key>
				<xs:keyref name="FK_InjectionSignalResult" refer="acaml:UK_InjectionSignalResults">
					<xs:annotation>
						<xs:documentation>Ensure, that referenced InjectionSignalResult-ID exists in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath=".//acaml:InjectionSignalResult_ID"/>
					<xs:field xpath="@id"/>
				</xs:keyref>
				<xs:key name="UK_InjectionResultInjectionCompounds">
					<xs:annotation>
						<xs:documentation>Ensure unique InjectionCompound-IDs in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:InjectionCompound"/>
					<xs:field xpath="@id"/>
				</xs:key>
				<xs:keyref name="FK_InjectionResultInjectionCompound" refer="acaml:UK_InjectionResultInjectionCompounds">
					<xs:annotation>
						<xs:documentation>Ensure, that referenced InjectionCompound-ID exists in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath=".//acaml:InjectionCompound_ID"/>
					<xs:field xpath="@id"/>
				</xs:keyref>
				<xs:key name="UK_InjectionResultSpectra">
					<xs:annotation>
						<xs:documentation>Ensure unique Spectrum-IDs in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:SignalResult/acaml:Spectrum"/>
					<xs:field xpath="@id"/>
				</xs:key>
				<xs:keyref name="FK_InjectionResultSpectrum" refer="acaml:UK_InjectionResultSpectra">
					<xs:annotation>
						<xs:documentation>Ensure, that referenced Spectrum-ID exists in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath=".//acaml:Spectrum_ID"/>
					<xs:field xpath="@id"/>
				</xs:keyref>
				<xs:key name="UK_InjectionResultPeaks">
					<xs:annotation>
						<xs:documentation>Ensure unique Peak-IDs in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:SignalResult/acaml:Peak"/>
					<xs:field xpath="@id"/>
				</xs:key>
				<xs:keyref name="FK_InjectionResultPeak" refer="acaml:UK_InjectionResultPeaks">
					<xs:annotation>
						<xs:documentation>Ensure, that referenced Peak-ID exists in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath=".//acaml:Peak_ID"/>
					<xs:field xpath="@id"/>
				</xs:keyref>
				<xs:key name="UK_InjectionResultVirtualPeaks">
					<xs:annotation>
						<xs:documentation>Ensure unique VirtualPeak-IDs in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:VirtualPeak"/>
					<xs:field xpath="@id"/>
				</xs:key>
				<xs:keyref name="FK_InjectionResultVirtualPeak" refer="acaml:UK_InjectionResultVirtualPeaks">
					<xs:annotation>
						<xs:documentation>Ensure, that referenced VirtualPeak-ID exists in scope of InjectionResult.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath=".//acaml:VirtualPeak_ID"/>
					<xs:field xpath="@id"/>
				</xs:keyref>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Document-Types.-->
	<xs:complexType name="DocType">
		<xs:annotation>
			<xs:documentation>Describes the entire document: doc-ID, info and content.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DocID" type="acaml:DocIDType">
				<xs:annotation>
					<xs:documentation>Unique ID of this document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocInfo" type="acaml:DocInfoType">
				<xs:annotation>
					<xs:documentation>Create, modify and audit-trail information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content" type="acaml:DocContentType">
				<xs:annotation>
					<xs:documentation>Store structured analytical data.</xs:documentation>
				</xs:annotation>
				<xs:key name="UK_Users">
					<xs:annotation>
						<xs:documentation>Unique key for user-objects.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:User"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_User" refer="acaml:UK_Users">
					<xs:selector xpath=".//acaml:User_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_LabSamples">
					<xs:selector xpath="./acaml:Resources/acaml:LabSample"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_LabSample" refer="acaml:UK_LabSamples">
					<xs:selector xpath=".//acaml:LabSample_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_Instruments">
					<xs:selector xpath="./acaml:Resources/acaml:Instrument"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_Instrument" refer="acaml:UK_Instruments">
					<xs:selector xpath=".//acaml:Instrument_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_SeparationMediums">
					<xs:selector xpath="./acaml:Resources/acaml:SeparationMedium"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_SeparationMedium" refer="acaml:UK_SeparationMediums">
					<xs:selector xpath=".//acaml:SeparationMedium_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_UVLibrarySpectrum">
					<xs:selector xpath="./acaml:Resources/acaml:UVLibrarySpectrum"/>
					<xs:field xpath="@id"/>
				</xs:key>
				<xs:keyref name="FK_UVLibrarySpectrum" refer="acaml:UK_UVLibrarySpectrum">
					<xs:selector xpath=".//acaml:UVLibrarySpectrum_ID"/>
					<xs:field xpath="@id"/>
				</xs:keyref>
				<xs:key name="UK_CalibrationCurve">
					<xs:selector xpath="./acaml:Resources/acaml:CalibrationCurve"/>
					<xs:field xpath="@id"/>
				</xs:key>
				<xs:keyref name="FK_CalibrationCurve" refer="acaml:UK_CalibrationCurve">
					<xs:selector xpath=".//acaml:CalibrationCurve_ID"/>
					<xs:field xpath="@id"/>
				</xs:keyref>
				<xs:key name="UK_Projects">
					<xs:selector xpath="./acaml:Project"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_Project" refer="acaml:UK_Projects">
					<xs:selector xpath=".//acaml:Project_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_Methods">
					<xs:selector xpath="./acaml:Method"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_Method" refer="acaml:UK_Methods">
					<xs:selector xpath=".//acaml:Method_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_MethodConfiguration">
					<xs:selector xpath="./acaml:MethodConfiguration"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_MethodConfiguration" refer="acaml:UK_MethodConfiguration">
					<xs:selector xpath=".//acaml:MethodConfiguration_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_SampleSetupContexts">
					<xs:selector xpath="./acaml:SampleContexts/acaml:Setup"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_SampleSetupContext" refer="acaml:UK_SampleSetupContexts">
					<xs:selector xpath=".//acaml:SampleSetupContext_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_SampleSetups">
					<xs:selector xpath="./acaml:Samples/acaml:Setup"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_SampleSetup" refer="acaml:UK_SampleSetups">
					<xs:selector xpath=".//acaml:SampleSetup_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_SampleMeasDataContext">
					<xs:selector xpath="./acaml:SampleContexts/acaml:MeasData"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_SampleMeasDataContext" refer="acaml:UK_SampleMeasDataContext">
					<xs:selector xpath=".//acaml:SampleMeasDataContext_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_SampleMeasData">
					<xs:selector xpath="./acaml:Samples/acaml:MeasData"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_SampleMeasData" refer="acaml:UK_SampleMeasData">
					<xs:selector xpath=".//acaml:SampleMeasData_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_InjectionMeasData">
					<xs:selector xpath="./acaml:Injections/acaml:MeasData"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:key name="UK_Signals">
					<xs:selector xpath=".//acaml:Signal"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:key name="UK_Fractions">
					<xs:selector xpath=".//acaml:Fraction"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_Fraction" refer="acaml:UK_Fractions">
					<xs:selector xpath=".//acaml:Fraction_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
				<xs:key name="UK_InjectionResults">
					<xs:selector xpath=".//acaml:Injections/acaml:Result"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:key>
				<xs:keyref name="FK_InjectionResult" refer="acaml:UK_InjectionResults">
					<xs:selector xpath=".//acaml:InjectionResult_ID"/>
					<xs:field xpath="@id"/>
					<xs:field xpath="@ver"/>
				</xs:keyref>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ContentVersioned" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation>Flag, that defines, if content of document contains versioned data. Import information for further document processing.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="DocIDType">
		<xs:annotation>
			<xs:documentation>Define type for Document-ID.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DocInfoType">
		<xs:annotation>
			<xs:documentation>Keep meta-information about the document, like content, creation-date, creation-user, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description" type="acaml:DescriptionStringType">
				<xs:annotation>
					<xs:documentation>Generic description of the document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedByUser" type="acaml:UsernameStringType">
				<xs:annotation>
					<xs:documentation>Name of person or system creating the document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedByApplication" type="acaml:CreatedByApplicationType">
				<xs:annotation>
					<xs:documentation>Name of application (SW-name, version, etc.) creating the document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreationDate" type="acaml:DateTimeType">
				<xs:annotation>
					<xs:documentation>Date of creation for the document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DatabaseName" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of source-database, from which document was generated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ClientName" type="acaml:CommonStringType">
				<xs:annotation>
					<xs:documentation>Name of client-pc, on which document was generated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField" type="acaml:CustomFieldType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Keep custom-specific values, which can't be stored in predefined locations of this object.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DocContentType">
		<xs:annotation>
			<xs:documentation>Describes the content of the document.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="User" type="acaml:UserType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Set of user-items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Resources" type="acaml:ResourcesType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sets of used resources like instruments, columns, chips, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Method" type="acaml:MethodType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Method-items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MethodConfiguration" type="acaml:MethodConfigurationType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Method Configurations. Referenced by method internally or externally.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SampleContexts" type="acaml:SampleContextsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contain structured context-information about setups, measurement-data and results.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Samples" type="acaml:SamplesType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contain structured sample-information about setup, measurement-data and result.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Injections" type="acaml:InjectionsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contain structured injection-information about setup, measurement-data and result.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Actions" type="acaml:ActionsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contain structured action information about setup oft sequence actions</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomCalcResults" type="acaml:CustomCalcResultsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store Custom Calculation Results (CCR)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Checksum-Types.-->
	<xs:simpleType name="DocChecksumValueType">
		<xs:annotation>
			<xs:documentation>Store calculated checksum.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:base64Binary"/>
	</xs:simpleType>
	<xs:simpleType name="DocChecksumAlgorithmEnum">
		<xs:annotation>
			<xs:documentation>Define algorithm of checksum-generation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="SHA1"/>
			<xs:enumeration value="MD5"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DocChecksumType">
		<xs:annotation>
			<xs:documentation>Keep integrity information about document-content.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="acaml:DocChecksumValueType"/>
		</xs:sequence>
		<xs:attribute name="Algorithm" type="acaml:DocChecksumAlgorithmEnum" use="required"/>
	</xs:complexType>
	<!---->
	<!--Doc-creating applications.-->
	<xs:simpleType name="AgilentApplicationEnum">
		<xs:annotation>
			<xs:documentation>Describe set of Agilent-applications, which can create an ACAML.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ChemStation"/>
			<xs:enumeration value="ChemStore"/>
			<xs:enumeration value="CerityP"/>
			<xs:enumeration value="OpenLABICM"/>
			<xs:enumeration value="EZChromElite"/>
			<xs:enumeration value="IntelligentDataAnalysis"/>
			<xs:enumeration value="Chromeleon"/>
			<xs:enumeration value="Empower"/>
			<xs:enumeration value="OpenLabCDS"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AgilentAppType">
		<xs:annotation>
			<xs:documentation>Describe Agilent-application.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="acaml:AgilentApplicationEnum"/>
			<xs:element name="Version" type="acaml:CommonStringType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CommonAppType">
		<xs:annotation>
			<xs:documentation>Describe common application.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="acaml:CommonStringType"/>
			<xs:element name="Version" type="acaml:CommonStringType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CreatedByApplicationType">
		<xs:annotation>
			<xs:documentation>Describe application, which created an ACAML.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="AgilentApp" type="acaml:AgilentAppType">
				<xs:annotation>
					<xs:documentation>Created by Agilent-application.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommonApp" type="acaml:CommonAppType">
				<xs:annotation>
					<xs:documentation>Other applications.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<!---->
	<!--Migration History & Steps-->
	<xs:complexType name="MigrationHistoryType">
		<xs:annotation>
			<xs:documentation>Keep track, how the document was migrated.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MigrationStep" type="acaml:MigrationStepType">
				<xs:annotation>
					<xs:documentation>Store migration information: source and destination version, date and application.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MigrationStepType">
		<xs:annotation>
			<xs:documentation>Define migration step, which shows the source and destination version, date and application.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FromNamespace" type="acaml:CommonStringType">
				<xs:annotation>
					<xs:documentation>Store the original ACAML namespace, which had the document before it was migrated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToNamespace" type="acaml:CommonStringType">
				<xs:annotation>
					<xs:documentation>Store the new ACAML namespace, which has the document after it was migrated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Date" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Store date and time of migration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Application" type="acaml:DescriptionStringType">
				<xs:annotation>
					<xs:documentation>Store information about the application, which performed the migration.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!---->
	<!--******************************************* ACAML Base Objects *******************************************-->
	<!---->
	<!--Data Type Definitions.-->
	<xs:simpleType name="DataTypeEnum">
		<xs:annotation>
			<xs:documentation>Names of data types for values.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Int"/>
			<xs:enumeration value="Long"/>
			<xs:enumeration value="Float32"/>
			<xs:enumeration value="Float64"/>
			<xs:enumeration value="String"/>
			<xs:enumeration value="Boolean"/>
			<xs:enumeration value="DateTime"/>
			<xs:enumeration value="Date"/>
			<xs:enumeration value="Time"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Scalar Data Types.-->
	<xs:simpleType name="UnitType">
		<xs:annotation>
			<xs:documentation>Base-type for unit-description (i.e. 's', 'kg', ...)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="ScalarUnitAttributesType">
		<xs:annotation>
			<xs:documentation>Combine attributes for scalar values with units.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="unit" type="acaml:UnitType" use="optional"/>
	</xs:attributeGroup>
	<xs:complexType name="IntegerType">
		<xs:annotation>
			<xs:documentation>Integer.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:integer" use="required"/>
	</xs:complexType>
	<xs:complexType name="IntegerUnitType">
		<xs:annotation>
			<xs:documentation>Integer with unit.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:integer" use="required"/>
		<xs:attributeGroup ref="acaml:ScalarUnitAttributesType"/>
	</xs:complexType>
	<xs:complexType name="LongType">
		<xs:annotation>
			<xs:documentation>Long</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:long" use="required"/>
	</xs:complexType>
	<xs:complexType name="LongUnitType">
		<xs:annotation>
			<xs:documentation>Long with unit.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:long" use="required"/>
		<xs:attributeGroup ref="acaml:ScalarUnitAttributesType"/>
	</xs:complexType>
	<xs:complexType name="DoubleType">
		<xs:annotation>
			<xs:documentation>Double.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:double" use="required"/>
	</xs:complexType>
	<xs:complexType name="DoubleUnitType">
		<xs:annotation>
			<xs:documentation>Double with unit.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:double" use="required"/>
		<xs:attributeGroup ref="acaml:ScalarUnitAttributesType"/>
	</xs:complexType>
	<xs:complexType name="BooleanType">
		<xs:annotation>
			<xs:documentation>Boolean</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:boolean" use="required"/>
	</xs:complexType>
	<!---->
	<!--String-Types-->
	<xs:simpleType name="CommonStringType">
		<xs:annotation>
			<xs:documentation>String-type for common purposes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NameStringType">
		<xs:annotation>
			<xs:documentation>String-type for name in GenericVersionedObjectType.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DescriptionStringType">
		<xs:annotation>
			<xs:documentation>String-type for descriptions.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="4000"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="UsernameStringType">
		<xs:annotation>
			<xs:documentation>String-type for user-names.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="UriStringType">
		<xs:annotation>
			<xs:documentation>String-type for URIs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="512"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="String30Type">
		<xs:annotation>
			<xs:documentation>String Type, 30 Chars</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="String50Type">
		<xs:annotation>
			<xs:documentation>String Type, 50 Chars</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="String100Type">
		<xs:annotation>
			<xs:documentation>String Type, 100 Chars</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Time- & Time Period Types-->
	<xs:simpleType name="TimeUnitEnum">
		<xs:annotation>
			<xs:documentation>Describe time-units: min, s, ms.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="acaml:UnitType">
			<xs:enumeration value="min"/>
			<xs:enumeration value="s"/>
			<xs:enumeration value="ms"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="TimePeriodAttributesType">
		<xs:annotation>
			<xs:documentation>Combine attributes for time-period values.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:double" use="required"/>
		<xs:attribute name="unit" type="acaml:TimeUnitEnum" use="optional"/>
	</xs:attributeGroup>
	<xs:complexType name="TimePeriodType">
		<xs:annotation>
			<xs:documentation>Describe relative time as double with unit.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="acaml:TimePeriodAttributesType"/>
	</xs:complexType>
	<xs:simpleType name="DateTimeType">
		<xs:annotation>
			<xs:documentation>DateTime</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:dateTime"/>
	</xs:simpleType>
	<!---->
	<!--Misc. Data Types.-->
	<xs:simpleType name="EdgeAlignmentEnum">
		<xs:annotation>
			<xs:documentation>Define which edge should be aligned with the corresponding value.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Low"/>
			<xs:enumeration value="Center"/>
			<xs:enumeration value="High"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BarcodeType">
		<xs:annotation>
			<xs:documentation>Define type for barcode.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="StandardCompoundIdentifierType">
		<xs:annotation>
			<xs:documentation>Identifies standard compound.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:annotation>
				<xs:documentation>Provide different ways to identify ISTD.</xs:documentation>
			</xs:annotation>
			<xs:element name="Number" type="acaml:IntegerType">
				<xs:annotation>
					<xs:documentation>Index of ISTD.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompoundName" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Name of ISTD-compound.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InjectionCompound_ID" type="acaml:InjectionCompoundRefType">
				<xs:annotation>
					<xs:documentation>Link to injection compound. Note: please consider, that compound may be located in another Injection ACAML document. So no check by key constraint is done.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="StandardCompoundAmountType">
		<xs:annotation>
			<xs:documentation>Define pair (Number, Amount) to represent a single named compound amount.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Identifier" type="acaml:StandardCompoundIdentifierType">
				<xs:annotation>
					<xs:documentation>Identifies internal standard compound.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="acaml:DoubleUnitType">
				<xs:annotation>
					<xs:documentation>Amount of ISTD</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CorrectionFactorType">
		<xs:annotation>
			<xs:documentation>Define named correction-factor with unit.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CorrectionFactor" type="acaml:DoubleUnitType"/>
			<xs:element name="Name" type="acaml:NameStringType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="VialNumberType">
		<xs:annotation>
			<xs:documentation>Define type for vial-numbers.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Lims-ID-Types.-->
	<xs:simpleType name="LimsKeyType">
		<xs:annotation>
			<xs:documentation>Define type for id-key of LIMS-ID.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LimsNameType">
		<xs:annotation>
			<xs:documentation>Define type for name of LIMS-ID.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="LimsIDType">
		<xs:annotation>
			<xs:documentation>Define type for LIMS-ID: contain key + name to describe external key.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="key" type="acaml:LimsKeyType" use="required">
			<xs:annotation>
				<xs:documentation>Key/id of external Lims.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="acaml:LimsNameType" use="optional">
			<xs:annotation>
				<xs:documentation>Describe key, to give possibility for identification.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!---->
	<!--Key: ID-type-->
	<xs:simpleType name="KeyIdType">
		<xs:annotation>
			<xs:documentation>Define type for id's.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<!--Key: Version-type.-->
	<xs:simpleType name="KeyVersionType">
		<xs:annotation>
			<xs:documentation>Define type of version in a key.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	<!---->
	<!--Base-type for an entity in ACAML, which has a non-versioned non-mandatory key-->
	<xs:complexType name="NonVersionedNonMandatoryObjectBaseType">
		<xs:annotation>
			<xs:documentation>Describe generic object with non-versioned ID. ID is not mandatory so older data will not break the schema.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="id" type="acaml:KeyIdType">
			<xs:annotation>
				<xs:documentation>ID of object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!---->
	<!--Base-type for an entity in ACAML, which has a non-versioned key-->
	<xs:complexType name="NonVersionedObjectBaseType">
		<xs:annotation>
			<xs:documentation>Describe generic object with non-versioned ID.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="id" type="acaml:KeyIdType" use="required">
			<xs:annotation>
				<xs:documentation>ID of object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!---->
	<!--Base-types for an entity in ACAML, which has a versioned key-->
	<xs:complexType name="VersionedObjectBaseType">
		<xs:annotation>
			<xs:documentation>Describe generic object with ID and version.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="id" type="acaml:KeyIdType" use="required">
			<xs:annotation>
				<xs:documentation>ID of object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ver" type="acaml:KeyVersionType" use="required">
			<xs:annotation>
				<xs:documentation>Version of object</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="VersionedExternalObjectBaseType">
		<xs:annotation>
			<xs:documentation>Describe generic external object with ID,version and path.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="id" type="acaml:KeyIdType" use="required">
			<xs:annotation>
				<xs:documentation>ID of object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ver" type="acaml:KeyVersionType" use="required">
			<xs:annotation>
				<xs:documentation>Version of object</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="path" type="acaml:UriStringType" use="required">
			<xs:annotation>
				<xs:documentation>Define path to external ACAML file, which contains object with (id, ver).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!---->
	<!--Key-Types.-->
	<xs:simpleType name="KeyIIDType">
		<xs:annotation>
			<xs:documentation>Define type of internal ID in a key.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1" fixed="true"/>
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="EntityKeyType">
		<xs:annotation>
			<xs:documentation>Describe generic key for a single object of each entity.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="iid" type="acaml:KeyIIDType" use="required"/>
		<xs:attribute name="ver" type="acaml:KeyVersionType" use="required"/>
	</xs:complexType>
	<!---->
	<!--User-Types.-->
	<xs:complexType name="UserType">
		<xs:annotation>
			<xs:documentation>Describe user-data of one specific person/identity/system.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="UserRefType">
		<xs:annotation>
			<xs:documentation>Reference to user object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="UserLinkType">
		<xs:annotation>
			<xs:documentation>Define link to user-object or separate username.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="User_ID" type="acaml:UserRefType">
				<xs:annotation>
					<xs:documentation>ID of person or system responsible for this audit trail entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Username" type="acaml:UsernameStringType">
				<xs:annotation>
					<xs:documentation>Person or system responsible for this audit trail entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<!---->
	<!--Audit-Trail-Types.-->
	<xs:complexType name="AuditTrailEntryType">
		<xs:annotation>
			<xs:documentation>Describe one log-entry in the audit-trial.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Date" type="acaml:DateTimeType">
				<xs:annotation>
					<xs:documentation>Date of the audit trail entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EntryBy" type="acaml:UserLinkType">
				<xs:annotation>
					<xs:documentation>User, which made the entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="acaml:DescriptionStringType">
				<xs:annotation>
					<xs:documentation>Descriptive text for this audit trail entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Reason" type="acaml:DescriptionStringType">
				<xs:annotation>
					<xs:documentation>Reason for this audit trail entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserText" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Optional text for additional information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AuditTrailType">
		<xs:annotation>
			<xs:documentation>Audit trail records.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AuditTrailEntry" type="acaml:AuditTrailEntryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of all entries.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Approval-Types.-->
	<xs:complexType name="ApprovalLevelType">
		<xs:annotation>
			<xs:documentation>Describe a single approval-level.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LevelNo" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>Number of approval-level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LevelName" type="acaml:String100Type">
				<xs:annotation>
					<xs:documentation>Name of approval level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EntryBy" type="acaml:UserLinkType">
				<xs:annotation>
					<xs:documentation>User, which did the approval.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EntryDate" type="acaml:DateTimeType">
				<xs:annotation>
					<xs:documentation>Date, when approval was done.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Reason" type="acaml:String100Type">
				<xs:annotation>
					<xs:documentation>Approval reason.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Comment" type="acaml:DescriptionStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Keep optional user comment.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ApprovalsType">
		<xs:annotation>
			<xs:documentation>Keep e-signatures/approvals.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Level" type="acaml:ApprovalLevelType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of attached e-signatures/approvals.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Diagnostic-Data-Types.-->
	<xs:complexType name="DiagnosticDataType">
		<xs:annotation>
			<xs:documentation>Keep diagnostic data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Item" type="acaml:CustomFieldType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Manage Object-Information.-->
	<xs:complexType name="ObjectInfoType">
		<xs:annotation>
			<xs:documentation>Describe information about who and when something was created.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CreatedBy" type="acaml:UserLinkType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Person or system creating this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedDate" type="acaml:DateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date of creation for this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifiedBy" type="acaml:UserLinkType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Person or system that last modified this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifiedDate" type="acaml:DateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date of last modification for this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AuditTrail" type="acaml:AuditTrailType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Audit trail records.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Approvals" type="acaml:ApprovalsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>E-signatures /user approvals.</xs:documentation>
				</xs:annotation>
				<xs:key name="UK_ObjectInfo_ApprovalLevels">
					<xs:annotation>
						<xs:documentation>Ensure unique LevelNo in scope of ObjectInfo.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:Level"/>
					<xs:field xpath="acaml:LevelNo"/>
				</xs:key>
			</xs:element>
			<xs:element name="Status" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Keep an optional status-information. This data has only informal character.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--XML-Types.-->
	<xs:complexType name="XmlAnyType">
		<xs:annotation>
			<xs:documentation>Store any well-formed xml-data, which isn't validated by the ACAML-schema.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Custom-Field-Types.-->
	<xs:complexType name="SimpleCustomFieldType">
		<xs:annotation>
			<xs:documentation>Describe simple custom-field: (name, value, description).</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Name" type="acaml:NameStringType" use="required">
			<xs:annotation>
				<xs:documentation>Name of custom-field.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="acaml:CommonStringType" use="required">
			<xs:annotation>
				<xs:documentation>Store single scalar value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Description" type="acaml:DescriptionStringType">
			<xs:annotation>
				<xs:documentation>Keep meta information about custom-field.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Mandatory" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Store information, if this custom field must be defined. If set to null or false -> custom field not mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CustomFieldType">
		<xs:annotation>
			<xs:documentation>Describe custom-field (value, type, unit, ...), allow recursive structures.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:annotation>
				<xs:documentation>Provide different types to store content of custom-field.</xs:documentation>
			</xs:annotation>
			<xs:element name="Value" type="acaml:CustomFieldValueType">
				<xs:annotation>
					<xs:documentation>Store single scalar value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Xml" type="acaml:XmlAnyType">
				<xs:annotation>
					<xs:documentation>Store custom-field value as XML.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField" type="acaml:CustomFieldType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of subordinate custom-fields.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="Name" use="required">
			<xs:annotation>
				<xs:documentation>Name of custom-field.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Description">
			<xs:annotation>
				<xs:documentation>Keep meta information about custom-field.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Mandatory" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Store information, if this custom field must be defined. If set to null or false -> custom field not mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CustomFieldContentType">
		<xs:annotation>
			<xs:documentation>Describe context of custom-field.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="CustomFieldValueType">
		<xs:annotation>
			<xs:documentation>Describe scalar value of custom-field.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" type="acaml:DataTypeEnum">
					<xs:annotation>
						<xs:documentation>Type of custom-field-value.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="unit" type="acaml:UnitType">
					<xs:annotation>
						<xs:documentation>Unit of custom-field-value.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ComplexCustomFieldsType">
		<xs:annotation>
			<xs:documentation>Contain list of complex structured custom fields.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CustomField" type="acaml:CustomFieldType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Keep complex structured, custom-specific values, which can't be stored in predefined locations of this object.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SimpleCustomFieldsType">
		<xs:annotation>
			<xs:documentation>Define set of simple (key, value)-pair custom fields.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CustomField01" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #01</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField02" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #02</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField03" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #03</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField04" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #04</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField05" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #05</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField06" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #06</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField07" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #07</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField08" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #08</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField09" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #09</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomField10" type="acaml:SimpleCustomFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom Field #10</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Binary-Data-Types.-->
	<xs:simpleType name="VectoreItemTypeEnum">
		<xs:annotation>
			<xs:documentation>Define type of vector-items.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Int32"/>
			<xs:enumeration value="Int64"/>
			<xs:enumeration value="Float32"/>
			<xs:enumeration value="Float64"/>
			<xs:enumeration value=""/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BinaryDataItemTypeEnum">
		<xs:annotation>
			<xs:documentation>Define enum to describe binary content.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ChemStation"/>
			<xs:enumeration value="WMF"/>
			<xs:enumeration value="ByExtension"/>
			<xs:enumeration value=""/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DataVectorType">
		<xs:annotation>
			<xs:documentation>Define content of binary vector.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ItemType" type="acaml:VectoreItemTypeEnum" use="required">
			<xs:annotation>
				<xs:documentation>Type of single item in vector.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Count" type="xs:int">
			<xs:annotation>
				<xs:documentation>Count of items in vector.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="DataFormatType">
		<xs:annotation>
			<xs:documentation>Keep defined format.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Type" type="acaml:BinaryDataItemTypeEnum" use="required">
			<xs:annotation>
				<xs:documentation>Type of binary data.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="DataFileChecksumType">
		<xs:annotation>
			<xs:documentation>Define type of checksum for files.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:base64Binary"/>
	</xs:simpleType>
	<xs:complexType name="DataFileRefType">
		<xs:annotation>
			<xs:documentation>Describe link by file-path to data file.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Path" type="acaml:UriStringType">
				<xs:annotation>
					<xs:documentation>Contains absolute/relative file.path like '.\Methods\METHODA.D'</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Size" type="acaml:LongType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contain file-size in bytes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedDate" type="acaml:DateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contain creation date of file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ModifiedDate" type="acaml:DateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contain modification date of file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Checksum" type="acaml:DataFileChecksumType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Keep integrity information for file.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DataBlobType">
		<xs:annotation>
			<xs:documentation>Describe data as embedded BLOB.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Blob" type="xs:base64Binary">
				<xs:annotation>
					<xs:documentation>Binary data object.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BinaryDataStorageType">
		<xs:annotation>
			<xs:documentation>Represent binary data.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="DataFileReference" type="acaml:DataFileRefType">
				<xs:annotation>
					<xs:documentation>Keep link to data-file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataBlob" type="acaml:DataBlobType">
				<xs:annotation>
					<xs:documentation>Store data internally as BLOB.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BinaryDataItemType">
		<xs:annotation>
			<xs:documentation>Keep binary data and description about it.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Name of binary data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="acaml:DescriptionStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store additional description of binary-data-item</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="acaml:DataTypeEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of included data points, if binary data represents a vector.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BinaryContent" minOccurs="0">
				<xs:complexType>
					<xs:choice>
						<xs:element name="Vector">
							<xs:annotation>
								<xs:documentation>Define vector.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="acaml:DataVectorType"/>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="DataFormat" type="acaml:DataFormatType">
							<xs:annotation>
								<xs:documentation>Defined format.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="Length" type="acaml:LongType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Length of binary-data in byte.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OriginalFilePath" type="acaml:UriStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If binary-data was file: store original file-path, e.g. to enable reconstruction of file on old location.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Data" type="acaml:BinaryDataStorageType">
				<xs:annotation>
					<xs:documentation>Store binary data.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BinaryDataDirectoryType">
		<xs:annotation>
			<xs:documentation>Group binary-data in hierarchy.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="acaml:NameStringType"/>
			<xs:element name="Description" type="acaml:DescriptionStringType" minOccurs="0"/>
			<xs:element name="DirItem" type="acaml:BinaryDataDirectoryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of directories.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OriginalFilePath" type="acaml:UriStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If binary-data was file: store original file-path, e.g. to enable reconstruction of file on old location.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataItem" type="acaml:BinaryDataItemType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of binary-data items.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BinaryDataType">
		<xs:annotation>
			<xs:documentation>Store flat/hierarchical binary data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DirItem" type="acaml:BinaryDataDirectoryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of directories.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataItem" type="acaml:BinaryDataItemType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of binary-data items.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Base-type for an entity in ACAML, which has a ID-->
	<xs:complexType name="GenericNonVersionedObjectType">
		<xs:annotation>
			<xs:documentation>Describe generic versioned object with unique key (ID + version) and info-data.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="Info" type="acaml:ObjectInfoType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep create/change/audit-trail data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ComplexCustomFields" type="acaml:ComplexCustomFieldsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Contain list of complex structured custom fields.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SimpleCustomFields" type="acaml:SimpleCustomFieldsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define set of simple (key, value)-pair custom fields.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BinaryData" type="acaml:BinaryDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Collection of binary-data items.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--Base-type for an entity in ACAML, which has a ID + version.-->
	<xs:complexType name="GenericVersionedObjectType">
		<xs:annotation>
			<xs:documentation>Describe generic versioned object with unique key (ID + version) and info-data.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="Info" type="acaml:ObjectInfoType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep create/change/audit-trail data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ComplexCustomFields" type="acaml:ComplexCustomFieldsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Contain list of complex structured custom fields.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SimpleCustomFields" type="acaml:SimpleCustomFieldsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define set of simple (key, value)-pair custom fields.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BinaryData" type="acaml:BinaryDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Collection of binary-data items.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Base-type for an entity in ACAML, which has a ID + version, name & description.-->
	<xs:complexType name="NamedGenericVersionedObjectType">
		<xs:annotation>
			<xs:documentation>Describe generic object with unique key (ID + version), name, description and info-data.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="Name" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Description" type="acaml:DescriptionStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Generic description of this item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProjectID" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Store project, to which object is assigned (untyped like: name, tag, ID, etc.).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--******************************************* ACAML Core Objects ******************************************* -->
	<!---->
	<!--Sample as original laboratory reagent-->
	<xs:complexType name="LabSampleType">
		<xs:annotation>
			<xs:documentation>Describe the  laboratory sample (e .g. original reagent).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="LimsID" type="acaml:LimsIDType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>List of keys from external LIMS.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Barcode" type="acaml:BarcodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Barcode of sample/vial.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LabSampleRefType">
		<xs:annotation>
			<xs:documentation>Define reference to LabSample object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Instrument Stuff.-->
	<xs:simpleType name="InstrumentTechniqueEnum">
		<xs:annotation>
			<xs:documentation>Define enumeration-items for instrument-techniques.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="LiquidChromatography"/>
			<xs:enumeration value="GasChromatography"/>
			<xs:enumeration value="MassSpectrometry"/>
			<xs:enumeration value="CapillaryElectrophoresis"/>
			<xs:enumeration value="UVVis"/>
			<xs:enumeration value="MicroFluidics"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="InstrumentType">
		<xs:annotation>
			<xs:documentation>Information about instrument.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="Technique" type="acaml:InstrumentTechniqueEnum">
						<xs:annotation>
							<xs:documentation>Describe type of measurement technique.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Module" type="acaml:InstrumentModuleType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Set of modules.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SeparationMedium_ID" type="acaml:SeparationMediumRefType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of used medium-IDs.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:InstrumentAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InstrumentRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InstrumentModuleType">
		<xs:annotation>
			<xs:documentation>Information instrument-modules.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedNonMandatoryObjectBaseType">
				<xs:sequence>
					<xs:element name="Name" type="acaml:NameStringType">
						<xs:annotation>
							<xs:documentation>Name of module.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DisplayName" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep additional name of module.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Manufacturer" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Who was the producer of the module?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Type" type="acaml:CommonStringType">
						<xs:annotation>
							<xs:documentation>What type of component is this? E.g., "Detector", "Injector", etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PartNo" type="acaml:CommonStringType">
						<xs:annotation>
							<xs:documentation>Part-number of module like 'G1313A'.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SerialNo" type="acaml:CommonStringType">
						<xs:annotation>
							<xs:documentation>Serial-number of module.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FirmwareRevision" type="acaml:CommonStringType">
						<xs:annotation>
							<xs:documentation>Current revision of module-firmware.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DriverVersion" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Current revision of module driver.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ConnectionInfo " type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep  connection information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AdditionalInformation " type="acaml:DescriptionStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Misc. information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ParentInstrumentModule_ID" type="acaml:InstrumentModuleRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Link to a parent instrument module to which this module belongs. (e.g.: associate DAD with HDR)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InstrumentModuleRefType">
		<xs:annotation>
			<xs:documentation>Reference to instrument module</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="InjectorPositionEnum">
		<xs:annotation>
			<xs:documentation>Position of injector.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Front"/>
			<xs:enumeration value="Back"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Separation-Mediums (Columns, Chips, ...).-->
	<xs:complexType name="SeparationMediumType">
		<xs:annotation>
			<xs:documentation>Information about a LC-column, MF-Chip etc...</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="Type" type="acaml:SpecificSeparationMediumType">
						<xs:annotation>
							<xs:documentation>Type-specific information about sep.-medium.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:SeparationMediumAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SeparationMediumRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="SeparationMediumPositionEnum">
		<xs:annotation>
			<xs:documentation>Define enums for position of sep.-medium.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Front"/>
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Rear"/>
			<xs:enumeration value="Right"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SpecificSeparationMediumType">
		<xs:annotation>
			<xs:documentation>Type-specific information about sep.-medium.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Column" type="acaml:SeparationMediumColumnType">
				<xs:annotation>
					<xs:documentation>Column-specific information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Chip" type="acaml:SeparationMediumChipType">
				<xs:annotation>
					<xs:documentation>Chip-specific information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="SeparationMediumColumnType">
		<xs:annotation>
			<xs:documentation>Column-specific information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SerialNo" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Serial number of the column.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProdNo" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Product number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BatchNo" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Batch number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BubbleCap" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Is a bubble capillary installed (in HPCE)?</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeadVolume" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Dead volume.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Diameter" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Diameter of the column.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Length of the column.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffLength" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Effective length of capillary (for HPCE).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParticleSize" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Particle size.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxTemp" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum temperature.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxPressure" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum pressure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxPH" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum pH.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserText" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>User entered text.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VoidTime" type="acaml:TimePeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Void time of column. Default unit is minutes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FilmThickness" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Film thickness time of column (GC).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SeparationMediumChipType">
		<xs:annotation>
			<xs:documentation>Chip-specific information.</xs:documentation>
		</xs:annotation>
		<xs:sequence/>
	</xs:complexType>
	<!---->
	<!--Calibration Curve Types-->
	<xs:complexType name="CalibrationHistoryType">
		<xs:annotation>
			<xs:documentation>Define calibration history type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SampleName" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Name/ID of the calibration sample.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>Amount of the compound as weighed-in for the calibration standard and entered into the cal table or individual amount entered on a per injection base (“Conc Override in EZChrom).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountAbs" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store the original absolute value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Response" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Response for this injection of a standard (based on Area, Height etc).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseAbs" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store the original absolute value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Residual" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Difference between user entered amount and back-calculated value for the calib standard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RelativeResidual" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Relative residual is a measure of the calibration point distance from the calculated curve.  The Relative Residual is calculated for each calibration point (level):
Residual = yi - Yi
RelResidual = (yi - Yi ) / Yi 
where yi is the measured response (“CalPoint.Area” or “CalPoint.Height” for each level) and Yi the predicted response for level i (calculated using the curve).
The relative residual is frequently reported in % units (RelResidual%). In that case the “RelResidual” needs to be multiplied by 100.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RelativeResidualPercent" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>See Residual. RelResidual% = (yi - Yi) / Yi * 100</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProcessedBy" type="acaml:UserLinkType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>User who has processed the calib standard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProcessedDate" type="acaml:DateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date and time the calibration sample was processed to create the curve.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataFileName" type="acaml:UriStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Path / Name of the “datafile” of this calib standard injection.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Valid" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Level is valid (true) or manually disabled (false).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CalibrationLevelType">
		<xs:annotation>
			<xs:documentation>Define calibration history type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Level" type="acaml:IntegerType">
				<xs:annotation>
					<xs:documentation># of the level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>Amount of the compound as weighed-in for the calibration standard and entered into the cal table. Note: if ISTD method used, this value must be the relative amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AverageAmountAbs" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store the original absolute value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AverageResponse" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Averaged response for this level (based on Area, Height etc). Note: if ISTD method used, this value must be the relative avg. response.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AverageResponseAbs" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store the original absolute value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseFactor" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>RF for this level of the calib curve.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseFactorStdDev" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Standard deviation of the averaged replicates for each level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseFactorRelStdDev" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Relative standard deviation of the averaged replicates for each level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Residual" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Difference between user entered amount and back-calculated value for the calib standard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RelativeResidual" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Relative residual is a measure of the calibration point distance from the calculated curve.  The Relative Residual is calculated for each calibration point (level):
Residual = yi - Yi
RelResidual = (yi - Yi ) / Yi 
where yi is the measured response (“CalPoint.Area” or “CalPoint.Height” for each level) and Yi the predicted response for level i (calculated using the curve).
The relative residual is frequently reported in % units (RelResidual%). In that case the “RelResidual” needs to be multiplied by 100.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RelativeResidualPercent" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>See Residual. RelResidual% = (yi - Yi) / Yi * 100</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalibrationHistory" type="acaml:CalibrationHistoryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Related calibration history objects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Valid" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Level is valid (true) or manually disabled (false).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="CalibrationCurveTypeEnum">
		<xs:annotation>
			<xs:documentation>Define enum for calib-curve types.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Linear"/>
			<xs:enumeration value="Quadratic"/>
			<xs:enumeration value="Cubic"/>
			<xs:enumeration value="Exponential"/>
			<xs:enumeration value="Logarithmic"/>
			<xs:enumeration value="Power"/>
			<xs:enumeration value="AverageRF"/>
			<xs:enumeration value="Piecewise"/>
			<xs:enumeration value="Custom"/>
			<xs:enumeration value="LogLog"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CalibrationCurveOriginEnum">
		<xs:annotation>
			<xs:documentation>Define enum for calib-curve origins.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Include"/>
			<xs:enumeration value="Force"/>
			<xs:enumeration value="Connect"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="CalibrationCurveCoeffType">
		<xs:annotation>
			<xs:documentation>Coefficients of calib-curve.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="A" type="acaml:DoubleType" minOccurs="0"/>
			<xs:element name="B" type="acaml:DoubleType" minOccurs="0"/>
			<xs:element name="C" type="acaml:DoubleType" minOccurs="0"/>
			<xs:element name="D" type="acaml:DoubleType" minOccurs="0"/>
			<xs:element name="E" type="acaml:DoubleType" minOccurs="0"/>
			<xs:element name="F" type="acaml:DoubleType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CalibrationCurveType">
		<xs:annotation>
			<xs:documentation>Define calibration curve.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="CorrCoefficient" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Correlation coefficient of calibration curve.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Origin" type="acaml:CalibrationCurveOriginEnum">
						<xs:annotation>
							<xs:documentation>Enum: origin of calibration curve.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Type" type="acaml:CalibrationCurveTypeEnum">
						<xs:annotation>
							<xs:documentation>Enum: type of calibration curve.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TypeDescription" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Additional information about type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Formula" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Formula of calibration curve.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Coefficients" type="acaml:CalibrationCurveCoeffType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Coefficients of calibration curve.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WeightType" type="acaml:NameStringType">
						<xs:annotation>
							<xs:documentation>Describe method of weighting.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Scale" type="acaml:NameStringType" minOccurs="0"/>
					<xs:element name="ResponseFactorStdDev" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="ResponseFactorRSDPercent" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Residual" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="CalibrationLevel" type="acaml:CalibrationLevelType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Used calibration levels.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Info" type="acaml:ObjectInfoType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep create/change/audit-trail data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResponseFactorCalcMode" type="acaml:ResponseFactorCalcModeEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define, how response is calculated</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DetermCoefficient" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Coefficient of determination.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AreRelativeValues" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>It's set to true, if the calibrations curve was created based on relative response factors (e.g. ISTD calibration).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalibrationCurveRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific calibration curve.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Keep resources.-->
	<xs:complexType name="ResourcesType">
		<xs:annotation>
			<xs:documentation>Describe resources like instruments, columns, chips, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LabSample" type="acaml:LabSampleType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Sample-items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Instrument" type="acaml:InstrumentType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Instrument-items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeparationMedium" type="acaml:SeparationMediumType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Contain used columns, chips, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalibrationCurve" type="acaml:CalibrationCurveType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Keep all used calibration curves with levels and history information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SampleContainerInfo" type="acaml:SampleContainerInfoType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>SampleContainerInfo-items.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--SampleContext Info Types.-->
	<xs:simpleType name="SampleContextTypeEnum">
		<xs:annotation>
			<xs:documentation>Define type of context: single-sample, sequence</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="SingleSample"/>
			<xs:enumeration value="Sequence"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SampleContextSourceEnum">
		<xs:annotation>
			<xs:documentation>Define source of context: acquisition, virtual</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Acquisition">
				<xs:annotation>
					<xs:documentation source="Content of sample-context is created by acquisition."/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Reprocessed">
				<xs:annotation>
					<xs:documentation source="Content of sample-context is created by reprocessing."/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Virtual">
				<xs:annotation>
					<xs:documentation source="Content of sample-context is created by composing data from various sources."/>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SampleContextIntegrityEnum">
		<xs:annotation>
			<xs:documentation>Define integrity context: complete, partial</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Complete">
				<xs:annotation>
					<xs:documentation source="Sample-context contains complete set of samples."/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Partial">
				<xs:annotation>
					<xs:documentation source="Sample-context contains subset of samples."/>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SampleContextInfoType">
		<xs:annotation>
			<xs:documentation>Keep information about sample-context.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ContentType" type="acaml:SampleContextTypeEnum" default="Undefined">
				<xs:annotation>
					<xs:documentation>Define kind of content of this context: 'SingleSample', ''</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SourceType" type="acaml:SampleContextSourceEnum" default="Undefined">
				<xs:annotation>
					<xs:documentation>Define, from which source / how the content was assembled: 'Acquisition', 'Virtual'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentIntegrity" type="acaml:SampleContextIntegrityEnum" default="Undefined">
				<xs:annotation>
					<xs:documentation>Define, if content is complete described (=all samples with all injections), or if only selected objects (e.g. subset of samples with subset of injections) are included.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PackagingModeEnum">
		<xs:annotation>
			<xs:documentation>Define set of packaging modes. Used by Intelligent Data Analysis.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Classic"/>
			<xs:enumeration value="FullResultSet"/>
			<xs:enumeration value="ResultSetWithTemplates"/>
			<xs:enumeration value="ResultSetWithMethods"/>
			<xs:enumeration value="SimpleResultSet"/>
			<xs:enumeration value="CompliantSingleSample"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Bracketing Data-->
	<xs:simpleType name="BracketingModeEnum">
		<xs:annotation>
			<xs:documentation>Define, which type of bracketing mode must be applied.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Standard"/>
			<xs:enumeration value="StandardClearCalibration"/>
			<xs:enumeration value="StandardOverlap"/>
			<xs:enumeration value="OverallSequence"/>
			<xs:enumeration value="SequenceBackCalculation"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Sample Parameter Enums.-->
	<xs:simpleType name="ResponseFactorUpdateEnum">
		<xs:annotation>
			<xs:documentation>Define update method of response factor.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="NoUpdate"/>
			<xs:enumeration value="Replace"/>
			<xs:enumeration value="Average"/>
			<xs:enumeration value="Bracketing"/>
			<xs:enumeration value="DeltaPercent"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RetentionTimeUpdateEnum">
		<xs:annotation>
			<xs:documentation>Define update method of retention time.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="NoUpdate"/>
			<xs:enumeration value="Replace"/>
			<xs:enumeration value="Average"/>
			<xs:enumeration value="Bracketing"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BracketingTypeEnum">
		<xs:annotation>
			<xs:documentation>Define type of bracketing.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Open"/>
			<xs:enumeration value="Close"/>
			<xs:enumeration value="Intermediate"/>
			<xs:enumeration value="Custom"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="InjectionSourceEnum">
		<xs:annotation>
			<xs:documentation>Define source of injections </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="StandardInjection"/>
			<xs:enumeration value="NoInjection"/>
			<xs:enumeration value="ManualInjection"/>
			<xs:enumeration value="InjectorProgram"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RunTypeEnum">
		<xs:annotation>
			<xs:documentation>Define set of run types</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="ClearAllCalibration"/>
			<xs:enumeration value="ClearCalibrationAtLevel"/>
			<xs:enumeration value="PrintCalibrationReport"/>
			<xs:enumeration value="AverageReplicates"/>
			<xs:enumeration value="ClearReplicates"/>
			<xs:enumeration value="BeginLoop"/>
			<xs:enumeration value="EndLoop"/>
			<xs:enumeration value="Shutdown"/>
			<xs:enumeration value="PrintAdditionalReports"/>
			<xs:enumeration value="BeginSystemSuitability"/>
			<xs:enumeration value="SystemSuitablityStandard"/>
			<xs:enumeration value="EndSystemSuitability"/>
			<xs:enumeration value="BeginSummary"/>
			<xs:enumeration value="SummaryRun"/>
			<xs:enumeration value="EndSummary"/>
			<xs:enumeration value="VialSummary"/>
			<xs:enumeration value="QCCheckStandard"/>
			<xs:enumeration value="Unspiked"/>
			<xs:enumeration value="Spiked"/>
			<xs:enumeration value="Spike1Of2"/>
			<xs:enumeration value="Spike2Of2"/>
			<xs:enumeration value="Duplicate"/>
			<xs:enumeration value="BeginCalibration"/>
			<xs:enumeration value="EndCalibration"/>
			<xs:enumeration value="BaselineCheck"/>
			<xs:enumeration value="BaselineFile"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="InjectionModificationEnum">
		<xs:annotation>
			<xs:documentation>Define type of manual modification done on an injection.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="ManualIntegration"/>
			<xs:enumeration value="ManualCompoundId"/>
			<xs:enumeration value="ManualIntegrationAndCompoundId"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Misc. Types-->
	<!---->
	<xs:complexType name="RunTypeAndReplicationType">
		<xs:annotation>
			<xs:documentation>Define run type and replication number.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="acaml:RunTypeEnum" use="required">
			<xs:annotation>
				<xs:documentation>Run type</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="replicationNo" type="xs:int">
			<xs:annotation>
				<xs:documentation>Replication number of specific type. Eg: QC Check # or Duplicate Level #).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!---->
	<!--Parameter types.-->
	<!---->
	<!--SampleContext-parameter types.-->
	<xs:complexType name="SampleContextIdentParamType">
		<xs:annotation>
			<xs:documentation>Define identification-parameter for sample-context.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Name of object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="acaml:DescriptionStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Generic description of this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextInfo" type="acaml:SampleContextInfoType">
				<xs:annotation>
					<xs:documentation>Keep information about sample-context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProjectID" type="acaml:NameStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store project, to which object is assigned (untyped like: name, tag, ID, etc.).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SampleContextAcquisitionParamType">
		<xs:annotation>
			<xs:documentation>Define data-acquisition-parameter for sample-context.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Instrument_ID" type="acaml:InstrumentRefType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection to related Instrument-object-IDs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Method_ID" type="acaml:MethodRefType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to acquisition method.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SampleContextDataAnalysisParamType">
		<xs:annotation>
			<xs:documentation>Define data-analysis-parameter for sample-context.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Method_ID" type="acaml:MethodRefType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to data-analysis method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BracketingMode" type="acaml:BracketingModeEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Mode of bracketing to be applied in data analysis of sequence.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Sample-parameter types.-->
	<xs:complexType name="SampleIdentParamType">
		<xs:annotation>
			<xs:documentation>Define identification-parameter for sample.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Name of object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="acaml:DescriptionStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Generic description of this item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LabSample_ID" type="acaml:LabSampleRefType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to laboratory sample.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LimsID" type="acaml:LimsIDType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of keys from external LIMS.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProjectID" type="acaml:NameStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store project, to which object is assigned (untyped like: name, tag, ID, etc.).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpectedBarcode" type="acaml:BarcodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Expected barcode of sample/vial.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Barcode" type="acaml:BarcodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Actual barcode of sample/vial (e.g. read from scanner).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PlateID" type="acaml:NameStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store ID of plate, on which sample is located.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SampleAcquisitionParamType">
		<xs:annotation>
			<xs:documentation>Define data-acquisition-parameter for sample.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Method_ID" type="acaml:MethodRefType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to acquisition-method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Instrument_ID" type="acaml:InstrumentRefType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Collection to related Instrument-object-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderNo" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines order-number during acquisition. Can be used e.g. to keep 'SequenceLine'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VialNumber" type="acaml:VialNumberType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Vial position of sample.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumberOfInjections" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>How often is the sample injected?</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InjectionVolume" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Volume to inject from sample.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FractionStartLocation" type="acaml:VialNumberType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Start vial-position for fraction collection in the fraction-collector.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InjectorPosition" type="acaml:InjectorPositionEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Position of injector.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InjectionSource" type="acaml:InjectionSourceEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define source of injections for this sample. If left out, a standard injection is assumed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InjectionSourceInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Descriptive information of the injection source.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SampleDataAnalysisParamType">
		<xs:annotation>
			<xs:documentation>Define data-analysis-parameter for sample.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Method_ID" type="acaml:MethodRefType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to data-analysis-method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="acaml:SampleTypeEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define type of sample: 'Sample', 'Calibration', 'Ladder', etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderNo" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines order-number during data-analysis. Can be used e.g. to keep 'SequenceLine'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SampleAmount" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define amount of analyzed sample content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalibrationLevel" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If type = 'Calibration', contain the used calibration-level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DilutionFactor" type="acaml:CorrectionFactorType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of factors for amount-correction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Multiplier" type="acaml:CorrectionFactorType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of factors for amount-correction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternalStandard" type="acaml:StandardCompoundAmountType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Amounts of  ISTD-compounds in the sample (will overwrite method-defaults).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalibrationStandard" type="acaml:StandardCompoundAmountType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Amounts of  standard compounds in the sample (will overwrite method-defaults).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseFactorUpdate" type="acaml:ResponseFactorUpdateEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If and how the response factors of the compounds are updated with the calibration standard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetentionTimeUpdate" type="acaml:RetentionTimeUpdateEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If and how the retention times of the compounds are updated with the calibration standard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UpdateInterval" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Update Interval from ChemStation Sequence for Bracketing sequences.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseFactorUpdateWeight" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Weighting of the new values for Average update of the RF. Range 0 to 100% , Default: NULL.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetentionTimeUpdateWeight" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Weighting of the new values for Average update of the RT. Range 0 to 100% , Default: NULL.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BracketingType" type="acaml:BracketingTypeEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of Bracketing for this sample.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RunType" type="acaml:RunTypeAndReplicationType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Define run type on sample level. Can be overwritten in each injection data analysis parameter</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Injection-parameter types.-->
	<xs:complexType name="InjectionAcquisitionParamType">
		<xs:annotation>
			<xs:documentation>Define data-acquisition-parameter for injection.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Method_ID" type="acaml:MethodRefType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to acquisition-method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderNo" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines order-number during acquisition. Can be used e.g. to keep 'InjectionNumber'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OverridenMethodParameter" type="acaml:MethodParameterType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Set of method parameters, which override original values in method</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InjectionDataAnalysisParamType">
		<xs:annotation>
			<xs:documentation>Define data-analysis-parameter for injection.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Method_ID" type="acaml:MethodRefType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to data analysis method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderNo" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines order-number during data-analysis. Can be used e.g. to keep 'InjectionNumber'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InjectionAmount" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define amount of analyzed injection content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DilutionFactor" type="acaml:CorrectionFactorType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of factors for amount-correction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Multiplier" type="acaml:CorrectionFactorType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of factors for amount-correction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternalStandard" type="acaml:StandardCompoundAmountType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Amounts of  ISTD-compounds in the injection (will overwrite method-defaults).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalibrationStandard" type="acaml:StandardCompoundAmountType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Amounts of  standard compounds in the injection (will overwrite method-defaults).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RunType" type="acaml:RunTypeAndReplicationType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Define run type on injection level. Overwrites setting from sample data analysis parameter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SampleType" type="acaml:SampleTypeEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define type of sample: 'Sample', 'Calibration', 'Ladder', etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SampleOrderNo" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines order-number during data-analysis. Can be used e.g. to keep 'SequenceLine'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SampleAmount" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define amount of analyzed sample content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SampleBracketingType" type="acaml:BracketingTypeEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of Bracketing for this sample.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalibrationLevel" type="acaml:IntegerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If type = 'Calibration', contain the used calibration-level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseFactorUpdate" type="acaml:ResponseFactorUpdateEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If and how the response factors of the compounds are updated with the calibration standard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetentionTimeUpdate" type="acaml:RetentionTimeUpdateEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If and how the retention times of the compounds are updated with the calibration standard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseFactorUpdateWeight" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Weighting of the new values for Average update of the RF. Range 0 to 100% , Default: NULL.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetentionTimeUpdateWeight" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Weighting of the new values for Average update of the RT. Range 0 to 100% , Default: NULL.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BackgroundSubtraction" type="acaml:BackgroundSubtractionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define background subtraction.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Global compound management.-->
	<xs:complexType name="CompoundSpectrumType">
		<xs:annotation>
			<xs:documentation>Describe spectral-information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RT" type="acaml:TimePeriodType">
				<xs:annotation>
					<xs:documentation>Retention-time.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="acaml:CommonStringType">
				<xs:annotation>
					<xs:documentation>Information like 'Mass'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExtrType" type="acaml:CommonStringType">
				<xs:annotation>
					<xs:documentation>Information like 'Apex'.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="CompoundTypeEnum">
		<xs:annotation>
			<xs:documentation>Describe type of compound, like "Main"</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Expected"/>
			<xs:enumeration value="UncalibratedExpected"/>
			<xs:enumeration value="PeakSum"/>
			<xs:enumeration value="Group"/>
			<xs:enumeration value="NotIdentifiedExpected"/>
			<xs:enumeration value="ManuallyIdentifiedExpected"/>
			<xs:enumeration value="ManuallyUnidentifiedExpected"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Method.-->
	<xs:simpleType name="QuantificationMethodEnum">
		<xs:annotation>
			<xs:documentation>Type of quantitation done by the method.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Area%"/>
			<xs:enumeration value="ESTD"/>
			<xs:enumeration value="ESTD%"/>
			<xs:enumeration value="Height%"/>
			<xs:enumeration value="ISTD"/>
			<xs:enumeration value="ISTD%"/>
			<xs:enumeration value="Norm%"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="MethodType">
		<xs:annotation>
			<xs:documentation>Describe method.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="Instrument_ID" type="acaml:InstrumentRefType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection to related Instrument-object-IDs.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SeparationMedium_ID" type="acaml:SeparationMediumRefType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of SeparationMedium-IDs</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Application" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>String identifying the application program that generated this method. String includes manufacturer,
program name, and program revision delimited by semicolons. E.g., "Hewlett-Packard;LC
ChemStation;A.05.00".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="QuantitationMethod" type="acaml:QuantificationMethodEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Type of quantitation done by the method.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Integrator" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of integrator used by this method. String consists of the manufacturer name, integrator name
and (possibly) revision, all delimited by semicolons. "HP,Genie", "HP;TwelveTone",
"ThruPut;Falcon", etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MethodConfigurationLink" type="acaml:MethodConfigurationLinkType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define link to MethodConfiguration. The referenced object can be internal (embedded in same document) or external (embedded in additional ACAML document).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OriginalVersion" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Original version of external method. Used to keep track, from which version clone was done.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TechSpec" type="acaml:MethodTechSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide technique-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:MethodAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MethodRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Method Configuration Types-->
	<xs:complexType name="MethodParameterType">
		<xs:annotation>
			<xs:documentation>Parameter type for method description. Structure taken from RC.NET.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="ID" type="xs:string"/>
			<xs:element name="Unit" type="xs:string" minOccurs="0"/>
			<xs:element name="Value" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MethodInstructionType">
		<xs:annotation>
			<xs:documentation>Instruction type for method description. Structure taken from RC.NET.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Index" type="xs:int"/>
			<xs:element name="Time" type="xs:double" minOccurs="0"/>
			<xs:element name="Function" type="xs:string"/>
			<xs:element name="ParameterString" type="xs:string"/>
			<xs:element name="Parameter" type="acaml:MethodParameterType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MethodRowType">
		<xs:annotation>
			<xs:documentation>Row type for method description. Structure taken from RC.NET.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Parameter" type="acaml:MethodParameterType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MethodTableType">
		<xs:annotation>
			<xs:documentation>Table type for method description. Structure taken from RC.NET.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="ID" type="xs:string"/>
			<xs:element name="Row" type="acaml:MethodRowType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MethodSectionType">
		<xs:annotation>
			<xs:documentation>Section type for method description. Structure taken from RC.NET.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="ID" type="xs:string"/>
			<xs:element name="Section" type="acaml:MethodSectionType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Parameter" type="acaml:MethodParameterType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Table" type="acaml:MethodTableType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MethodConfigurationType">
		<xs:annotation>
			<xs:documentation>Type to define a generic method description.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="MethodDescription" type="acaml:MethodSectionType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Store generic description of a method. Structure of description is RC.NET style.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Method Configuration Reference Types-->
	<xs:complexType name="MethodConfigurationRefType">
		<xs:annotation>
			<xs:documentation>Define link to an internal MethodConfigurationType. A foreign key constraint will ensure, that the referenced object is present in the same ACAML document.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MethodConfigurationExternalRefType">
		<xs:annotation>
			<xs:documentation>Define link to an external MethodConfigurationType. The path to the ACAML document, which contains the referenced MethodConfigurationType is stored in the 'path' attribute. The id of the external object MUST be the same. IMPORTANT NOTE: no check mechanism for the referential integrity exists. The business logic of the application is responsible to ensure, that all pieces of data are available and that the id's are consistent and match.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedExternalObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MethodConfigurationLinkType">
		<xs:annotation>
			<xs:documentation>Define link to a MethodConfiguration.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="MethodConfiguration_ID" type="acaml:MethodConfigurationRefType">
				<xs:annotation>
					<xs:documentation>Define link to an internal MethodConfigurationType. A foreign key constraint will ensure, that the referenced object is present in the same ACAML document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalMethodConfiguration_ID" type="acaml:MethodConfigurationExternalRefType">
				<xs:annotation>
					<xs:documentation>Define link to an external MethodConfigurationType. The path to the ACAML document, which contains the referenced MethodConfigurationType is stored. The id of the external object MUST be the same. IMPORTANT NOTE: no check mechanism for the referential integrity exists. The business logic of the application is responsible to ensure, that all pieces of data are available and that the id's are consistent.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<!---->
	<!--Setup-Section.-->
	<!---->
	<!--SampleContext-->
	<xs:complexType name="SampleSetupContextType">
		<xs:annotation>
			<xs:documentation>Setup-context for sample-information(s).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="IdentParam" type="acaml:SampleContextIdentParamType">
						<xs:annotation>
							<xs:documentation>Sample identification parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcqParam" type="acaml:SampleContextAcquisitionParamType">
						<xs:annotation>
							<xs:documentation>Sample acquisition parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DAParam" type="acaml:SampleContextDataAnalysisParamType">
						<xs:annotation>
							<xs:documentation>Sample data analysis parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SampleSetup_ID" type="acaml:SampleSetupRefType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of sample-setup-IDs, which belong to this context.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PackagingMode" type="acaml:PackagingModeEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Result set or not, if yes what objects are included. Used by Intelligent Data Analysis.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SourceSystemRev" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Information about revision of source data system.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Locked" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define, if result set is locked.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TechSpec" type="acaml:SampleSetupContextTechSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide technique-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:SampleSetupContextAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SampleSetupContextRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--Sample-->
	<xs:simpleType name="SampleTypeEnum">
		<xs:annotation>
			<xs:documentation>Define different sample-types like 'Sample', 'Calibration', etc.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unspecified"/>
			<xs:enumeration value="Calibration"/>
			<xs:enumeration value="Checkout"/>
			<xs:enumeration value="Sample"/>
			<xs:enumeration value="Control"/>
			<xs:enumeration value="Blank"/>
			<xs:enumeration value="Ladder"/>
			<xs:enumeration value="SystemSuitability"/>
			<xs:enumeration value="CalibrationCheck"/>
			<xs:enumeration value="DoubleBlank"/>
			<xs:enumeration value="Matrix"/>
			<xs:enumeration value="MatrixDup"/>
			<xs:enumeration value="MatrixBlank"/>
			<xs:enumeration value="TuneCheck"/>
			<xs:enumeration value="ResponseCheck"/>
			<xs:enumeration value="Spike"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SampleSetupType">
		<xs:annotation>
			<xs:documentation>Sample-setup information.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="IdentParam" type="acaml:SampleIdentParamType">
						<xs:annotation>
							<xs:documentation>Sample identification parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcqParam" type="acaml:SampleAcquisitionParamType">
						<xs:annotation>
							<xs:documentation>Sample acquisition parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DAParam" type="acaml:SampleDataAnalysisParamType">
						<xs:annotation>
							<xs:documentation>Sample data analysis parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SourceSystemRev" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Information about revision of source data system.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TechSpec" type="acaml:SampleSetupTechSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide technique-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:SampleSetupAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SampleSetupRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--MeasurementData-Section.-->
	<!---->
	<!--SampleContext.-->
	<xs:complexType name="SampleMeasDataContextType">
		<xs:annotation>
			<xs:documentation>Keep acquired data from an instrument-run on context-level</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="SampleSetupContext_ID" type="acaml:SampleSetupContextRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>FK to related setup-context-object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IdentParam" type="acaml:SampleContextIdentParamType">
						<xs:annotation>
							<xs:documentation>Sample identification parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcqParam" type="acaml:SampleContextAcquisitionParamType">
						<xs:annotation>
							<xs:documentation>Sample acquisition parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SampleMeasData_ID" type="acaml:SampleMeasDataRefType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of sample-data IDs, which belong to this sequence.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Signal" type="acaml:SignalType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of acquired instrument-signals.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DiagnosticData" type="acaml:DiagnosticDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep diagnostic data of current level.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquisitionApplication" type="acaml:CreatedByApplicationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of application creating this measurement data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquisitionSoftware" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Additional information about software name and revision, which was used to acquire the raw data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:SampleMeasDataContextAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SampleMeasDataContextRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Sample.-->
	<xs:complexType name="SampleMeasDataType">
		<xs:annotation>
			<xs:documentation>Keep acquired data from an instrument-run on sample-level</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="IdentParam" type="acaml:SampleIdentParamType">
						<xs:annotation>
							<xs:documentation>Sample identification parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcqParam" type="acaml:SampleAcquisitionParamType">
						<xs:annotation>
							<xs:documentation>Sample acquisition parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SampleSetup_ID" type="acaml:SampleSetupRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>FK to related SampleSetup-object</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InjectionMeasData_ID" type="acaml:InjectionMeasDataRefType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of injection-measurement-data-IDs, which belong to this sample.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Signal" type="acaml:SignalType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of acquired instrument-signals.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DiagnosticData" type="acaml:DiagnosticDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep diagnostic data of current level.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquisitionApplication" type="acaml:CreatedByApplicationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of application creating this measurement data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquisitionSoftware" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Additional information about software name and revision, which was used to acquire the raw data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:SampleMeasDataAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SampleMeasDataRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Injection.-->
	<xs:complexType name="InjectionMeasDataType">
		<xs:annotation>
			<xs:documentation>Keep acquired data from an instrument-run on injection-level</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="AcqParam" type="acaml:InjectionAcquisitionParamType">
						<xs:annotation>
							<xs:documentation>Injection acquisition parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquitionStatus" type="acaml:AcquisitionStatusType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Acquisition state on this injection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Signal" type="acaml:SignalType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of acquired instrument-signals.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InjectionSeparationMedium" type="acaml:InjectionSeparationMediumType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Keep information of used separation-media.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InjectionVolume" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Volume, which was really injected by instrument.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DiagnosticData" type="acaml:DiagnosticDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep diagnostic data of current level.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RunTime" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Stop time of a single run as defined in the method.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquisitionApplication" type="acaml:CreatedByApplicationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of application creating this measurement data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquisitionSoftware" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Additional information about software name and revision, which was used to acquire the raw data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquisitionMethodVersion" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Store version of method, which was used to acquire the data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AcquisitionIdentifier" type="acaml:NameStringType" minOccurs="0"/>
					<xs:element name="ExternalResultPath" type="acaml:UriStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep path to injection ACAML file (where corresponding InjectionResult object is located). The InjectionMeasData_ID element of this external InjectionResult object must point to the specific InjectionMeasData object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SampleLabel" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Custom label for sample, e.g. used for sequence summary report</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SampleContainerInfo_ID" type="acaml:SampleContainerInfoRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Link to sample container info</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SampleLocationIdentifier" type="acaml:SampleLocationIdentifierType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define identifier for sample location as returned by location string parser.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TechSpec" type="acaml:InjectionMeasDataTechSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide technique-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:InjectionMeasDataAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InjectionMeasDataRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InjectionSeparationMediumType">
		<xs:annotation>
			<xs:documentation>Keep data about injection-medium on injection-level</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AutoDetect" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Was this medium detected automatically by the medium ID module?</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Position" type="acaml:SeparationMediumPositionEnum">
				<xs:annotation>
					<xs:documentation>Position of the medium.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InjectionCount" type="acaml:LongType">
				<xs:annotation>
					<xs:documentation>Number of injections made with this medium(including this one).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UsedForInjection" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Set to true, if the column was used as injection column. Used to flag the "main" column, when multiple columns are assigned to an injection. If only one column is assigned to an injection, it's assumed, that this column is automatically the injection column.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Role" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicate the role the column had within this injection</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeparationMedium_ID" type="acaml:SeparationMediumRefType">
				<xs:annotation>
					<xs:documentation>FK to related sep.-medium object.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--AcquisitionStatus-->
	<xs:simpleType name="AcquisitionStatusEnum">
		<xs:annotation>
			<xs:documentation>Define ACQ state.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Completed"/>
			<xs:enumeration value="Aborted"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AcquisitionStatusType">
		<xs:annotation>
			<xs:documentation>Define current state information of ACQ.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Status" type="acaml:AcquisitionStatusEnum">
				<xs:annotation>
					<xs:documentation>Acquisition status of injection.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Message" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Optional message, to describe status.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Signal.-->
	<xs:complexType name="GenericDataInfoType">
		<xs:annotation>
			<xs:documentation>Define the type for the generic analytical result meta data </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DataChannelId" type="xs:string">
				<xs:annotation>
					<xs:documentation>The id of the data channel as provided by the driver. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataChannelName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The data channel name as provided by the driver. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataChannelDescription" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The data channel description as provided by the driver. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PeakDeletionTypeEnum">
		<xs:annotation>
			<xs:documentation>Describe how peaks will be deleted in specific region.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="DeletePeak"/>
			<xs:enumeration value="DeleteRegion"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PeakDeletionType">
		<xs:annotation>
			<xs:documentation>Define range and type for  peak deletion.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DeletionType" type="acaml:PeakDeletionTypeEnum">
				<xs:annotation>
					<xs:documentation>Define how peak deletion must be done.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Range" type="acaml:TimeRangeType">
				<xs:annotation>
					<xs:documentation>Define time range for deletion.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PeakDeletionsType">
		<xs:annotation>
			<xs:documentation>Define collection for peak deletions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PeakDeletion" type="acaml:PeakDeletionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Define range and type for  peak deletion.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="SignalTypeEnum">
		<xs:annotation>
			<xs:documentation>Define type of signal.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="SignalType">
		<xs:annotation>
			<xs:documentation>Describe the signal-data (detector, type, raw-data, etc.).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="Type" type="acaml:NameStringType">
						<xs:annotation>
							<xs:documentation>Describe type of signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BeginTime" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTime" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name="BeginTimeAnalysis" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeAnalysis" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartIndex" type="acaml:IntegerType" minOccurs="0"/>
					<xs:element name="EndIndex" type="acaml:IntegerType" minOccurs="0"/>
					<xs:element name="Frequency" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Frequency of signal in Hz.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="XAxisScalingFactor" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used to scale x-axis values of raw signal data to specific unit. If not define, default = 1 will be assumed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="YAxisScalingFactor" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used to scale y-axis values of raw signal data to specific unit. If not define, default = 1 will be assumed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TraceID" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Use to uniquely reference a specific signal (trace) in a single raw data file like EZChrom.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimeShift" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Time value shift the signal (positive or negative) so that it's correctly displayed in the signal graph and that peak RT and annotations will match.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExtractionParameters" type="acaml:DescriptionStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep encoded signal extraction parameters for e.g. EIC, avg. spectrum, etc..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UserGenerated" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>'True', when signal was extracted by user.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AutomationGenerated" minOccurs="0">
						<xs:annotation>
							<xs:documentation>'True', when signal was generated by ACQ automation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DetectorName" type="acaml:NameStringType" minOccurs="0"/>
					<xs:element name="DetectorInstance" type="acaml:NameStringType" minOccurs="0"/>
					<xs:element name="ChannelName" type="acaml:NameStringType" minOccurs="0"/>
					<xs:element name="MSSpectrumSearchResults" type="acaml:MSSpectrumSearchResultsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>MS Library search results.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PeakDeletions" type="acaml:PeakDeletionsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define peak deletions.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BackgroundSubtraction" type="acaml:BackgroundSubtractionSignalType" minOccurs="0"/>
					<xs:element name="ProcessingStep" type="acaml:ProcessingStepType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="Dimension" type="acaml:IntegerType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The dimension to which this signal belongs. (1 => 1st dimension (default), 2 => 2nd dimension (e.g. 2D-LC heart cuts))</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GenericDataInfo" type="acaml:GenericDataInfoType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The generic analytical result data info.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Group" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used to group signals belonging to the same 2D cut</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tags" type="acaml:CommonStringType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Used to tag signals belonging to the same category</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InstrumentModule_ID" type="acaml:InstrumentModuleRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Link to instrument module which produced this signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TechSpec" type="acaml:SignalTechSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide technique-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Result-Section.-->
	<!---->
	<!--Injection.-->
	<xs:simpleType name="NoiseTypeEnum">
		<xs:annotation>
			<xs:documentation>Define computed noise type.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Astm"/>
			<xs:enumeration value="6sd"/>
			<xs:enumeration value="P2p"/>
			<xs:enumeration value="P2p"/>
			<xs:enumeration value="Rms"/>
			<xs:enumeration value="Undefined"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="InjectionResultType">
		<xs:annotation>
			<xs:documentation>Keep results on injection-level</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="DAParam" type="acaml:InjectionDataAnalysisParamType">
						<xs:annotation>
							<xs:documentation>Injection data analysis parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InjectionMeasData_ID" type="acaml:InjectionMeasDataRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Link to related InjectionMeasData-object</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SignalResult" type="acaml:InjectionSignalResultType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of subsidiary signal-results, which belong to this injection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InjectionCompound" type="acaml:InjectionCompoundType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of identified local compounds of this injection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="VirtualPeak" type="acaml:VirtualPeakType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of virtual peaks. A  virtual peak can be based on real peaks from the signals of this injection.</xs:documentation>
						</xs:annotation>
						<xs:key name="UK_VirtualPeak_Peak_IDs">
							<xs:annotation>
								<xs:documentation>Avoid duplicates in Peak_ID-collection.</xs:documentation>
							</xs:annotation>
							<xs:selector xpath="./acaml:Peak_ID"/>
							<xs:field xpath="@id"/>
						</xs:key>
					</xs:element>
					<xs:element name="DataAnalysisApplication" type="acaml:CreatedByApplicationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of application creating this result.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DataAnalysisSoftware" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Additional information about software name and revision, which was used to analyze the raw data and to produce the results.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DataAnalysisMethodVersion" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Store version of method, which was used to process the results.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReferencedInjectionInfo" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference injection information like sample name, datafile name, path etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Label" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Custom label for sample, used e.g. for identification of custom calculations, dissolution results, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ManualModification" type="acaml:InjectionModificationEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Store information, if injection was modified manually.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProcessingStatus" type="acaml:ProcessingStatusType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Collection of processing status items to reflect outcome of data analysis.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NoiseType" type="acaml:NoiseTypeEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Computed noise type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReprocessingRequired" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Set to 'tue', if result needs to be reprocessed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Integrator" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Integrator which was used during processing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TechSpec" type="acaml:InjectionResultTechSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide technique-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AppSpec" type="acaml:InjectionResultAppSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide application-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InjectionResultRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--Injection + Signal-->
	<xs:complexType name="InjectionSignalResultType">
		<xs:annotation>
			<xs:documentation>Keep results of a signal on injection-level.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericNonVersionedObjectType">
				<xs:sequence>
					<xs:element name="Signal_ID" type="acaml:SignalRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>FK to related Signal-object</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Peak" type="acaml:PeakType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of peaks, which belong to this signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NoisePeriod" type="acaml:NoisePeriodType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Signal-noise data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Spectrum" type="acaml:SpectrumType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of detected spectra.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Annotations" type="acaml:SignalAnnotationsType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InjectionSignalResultRefType">
		<xs:annotation>
			<xs:documentation>Reference to injection-signal-result.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Processing Status-->
	<xs:simpleType name="ProcessingTranformationStateEnum">
		<xs:annotation>
			<xs:documentation>Define final state of a processing transformation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="NotReady"/>
			<xs:enumeration value="Ready"/>
			<xs:enumeration value="Passed"/>
			<xs:enumeration value="PassedWithWarning"/>
			<xs:enumeration value="Failed"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ProcessingTranformationChainStateEnum">
		<xs:annotation>
			<xs:documentation>Define final state of a processing transformation chain.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="NotExecuted"/>
			<xs:enumeration value="Passed"/>
			<xs:enumeration value="PassedWithWarning"/>
			<xs:enumeration value="Aborted"/>
			<xs:enumeration value="Failed"/>
			<xs:enumeration value="NoMethodProvided"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ProcessingStatusItemType">
		<xs:annotation>
			<xs:documentation>Processing status item.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Category">
				<xs:annotation>
					<xs:documentation>Category (classification) of processing status item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="acaml:String100Type">
						<xs:minLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TransformationState " type="acaml:ProcessingTranformationStateEnum">
				<xs:annotation>
					<xs:documentation>Result of single processing transformation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Message" nillable="false">
				<xs:annotation>
					<xs:documentation>Content body of processing status item.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProcessingStatusType">
		<xs:annotation>
			<xs:documentation>Collection of processing status items.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProcessingStatusItem" type="acaml:ProcessingStatusItemType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Processing status items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransformationChainState " type="acaml:ProcessingTranformationChainStateEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Keep final status of of overall processing steps.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Noise.-->
	<xs:complexType name="NoisePeriodType">
		<xs:annotation>
			<xs:documentation>Signal-noise data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TimeFrom" type="acaml:TimePeriodType"/>
			<xs:element name="TimeTo" type="acaml:TimePeriodType"/>
			<xs:element name="Noise6SD" type="acaml:DoubleUnitType"/>
			<xs:element name="NoisePToP" type="acaml:DoubleUnitType"/>
			<xs:element name="NoiseASTM" type="acaml:DoubleUnitType"/>
			<xs:element name="Wander" type="acaml:DoubleUnitType"/>
			<xs:element name="Drift" type="acaml:DoubleUnitType"/>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Annotation.-->
	<xs:complexType name="SignalAnnotationBaseType">
		<xs:annotation>
			<xs:documentation>Base properties for signal annotations</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="XPosition" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>where the annotation is placed in x</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="YPosition" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>where the annotation is placed in y</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="XAlignment" type="acaml:EdgeAlignmentEnum">
				<xs:annotation>
					<xs:documentation>how the annotation is aligned to the x position 
(low : to the left edge, 
high: to the right edge) </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="YAlignment" type="acaml:EdgeAlignmentEnum">
				<xs:annotation>
					<xs:documentation>how the annotation is aligned to the y position 
(low : to the bottom edge, 
high: to the top edge) </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentCategory" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to group different annotations. 
Typically an application specific enum string whereby value units,  format or xml deserialization class can be selected within the rendering application.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SignalAnnotationValueType">
		<xs:annotation>
			<xs:documentation>Value based annotation for signals</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:SignalAnnotationBaseType">
				<xs:sequence>
					<xs:element name="ContentValue" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>the double value to be shown (if any)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalAnnotationTextType">
		<xs:annotation>
			<xs:documentation>Text based annotation for signals</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:SignalAnnotationBaseType">
				<xs:sequence>
					<xs:element name="ContentText" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>the string value to be shown at the annotation position</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalAnnotationXmlType">
		<xs:annotation>
			<xs:documentation>XML based annotation for signals</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:SignalAnnotationBaseType">
				<xs:sequence>
					<xs:element name="ContentXml" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The serialized xml of a complex content class to be shown at the annotation position.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalAnnotationItemType">
		<xs:annotation>
			<xs:documentation>Helper type to allow for boxing of SignalAnnotationBaseType</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="ValueAnnotation" type="acaml:SignalAnnotationValueType" minOccurs="0"/>
			<xs:element name="TextAnnotation" type="acaml:SignalAnnotationTextType" minOccurs="0"/>
			<xs:element name="XmlAnnotation" type="acaml:SignalAnnotationXmlType" minOccurs="0"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="SignalAnnotationsType">
		<xs:sequence>
			<xs:element name="SignalAnnotationItem" type="acaml:SignalAnnotationItemType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Peak.-->
	<xs:simpleType name="CalibPeakRoleEnum">
		<xs:annotation>
			<xs:documentation>Describe role of peak, if used for identification.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Main"/>
			<xs:enumeration value="Qualifier"/>
			<xs:enumeration value="Ignore"/>
			<xs:enumeration value="NewMain"/>
			<xs:enumeration value="NewIgnore"/>
			<xs:enumeration value="DetectorMain"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PeakTypeEnum">
		<xs:annotation>
			<xs:documentation>Define type of peak.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Tangent"/>
			<xs:enumeration value="Solvent"/>
			<xs:enumeration value="AreaSum"/>
			<xs:enumeration value="FrontShoulderDropLine"/>
			<xs:enumeration value="FrontShoulderTangent"/>
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="ManualNegative"/>
			<xs:enumeration value="ManualNegativeShoulderDropLine"/>
			<xs:enumeration value="ManualNegativeShoulderTangent"/>
			<xs:enumeration value="ManualShoulderDropLine"/>
			<xs:enumeration value="ManualShoulderTangent"/>
			<xs:enumeration value="ManualTangentSkimExpo"/>
			<xs:enumeration value="ManualTangentSkimNewExpo"/>
			<xs:enumeration value="ManualTangentSkimNormal"/>
			<xs:enumeration value="Negative"/>
			<xs:enumeration value="NegativeShoulderDropLine"/>
			<xs:enumeration value="NegativeShoulderTangent"/>
			<xs:enumeration value="NormalPeak"/>
			<xs:enumeration value="RearSholderDropLine"/>
			<xs:enumeration value="RearShoulderTangent"/>
			<xs:enumeration value="ReCalcSolventPeak"/>
			<xs:enumeration value="ShoulderDropLine"/>
			<xs:enumeration value="ShoulderTangent"/>
			<xs:enumeration value="TangentSkimExpo"/>
			<xs:enumeration value="TangentSkimNewExpo"/>
			<xs:enumeration value="TangentSkimNormal"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PeakType">
		<xs:annotation>
			<xs:documentation>Describes a real, detected peak. The ID (e.g. a guid) must be unique in scope of InjectionResult.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="RetentionTime" type="acaml:TimePeriodType">
						<xs:annotation>
							<xs:documentation>Retention time of the peak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Number" type="acaml:IntegerType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Number of peak in the signal – or aligned peak number after peak alignment across signals.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Type" type="acaml:PeakTypeEnum" default="Unknown" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Type of peak. Default is 'Unknown'.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RelativeRetentionTime" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Relative retention time of the peak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RelativeRetentionTime_EP" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Relative retention time of the peak according to European Pharmacopoeia.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CorrExpRetTime" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The expected RT for this peak (from the TCM) corrected by the actual RT of the time reference
compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReferencePeakIdentifier" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name/number of peak or compound, used to calculate relative retention time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Area" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Area of the peak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AreaPercent" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak area percentage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AreaSum" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak area sum.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Height" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Height of the peak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HeightPercent" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak height percentage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HeightSum" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak height sum.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HeightToValleyRatioBefore" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The PeakHeight to the valley height at its left side.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HeightToValleyRatioAfter" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The PeakHeight to the valley height at its right side.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Symmetry" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Symmetry of the peak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BeginTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="EndTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="BaselineCode" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="10"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="BaselineStart" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Height of the baseline at Peak_BeginTime as calculated by the integrator</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BaselineEnd" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Height of the baseline at Peak_EndTime as calculated by the integrator</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LevelStart" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>LevelStart is the y-offset above the baseline at peak start, which may match the signal and is used for integration (for details see below)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LevelEnd" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>LevelEnd is the y-offset above the baseline at peak end, which may match the signal and is used for integration (for details see below)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CapacityFactor" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Capacity factor, or k'. USP and other Standards</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Excess" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="StatisticalMoment0" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="StatisticalMoment1" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="StatisticalMoment2" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="StatisticalMoment3" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="StatisticalMoment4" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Plate2Sigma" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Plate3Sigma" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Plate4Sigma" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Plate5Sigma" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="PlatesPerMeter_EP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="PlatesPerMeter_USP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="PlatesPerMeter_JP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="PlatesPerMeter_AOH" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="PlatesStatistical" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="PlatesPerMeter_EMG" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="PlatesPerColumn_FoleyDorsey" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Foley Dorsey: Plates/Column</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PlatesPerMeter_FoleyDorsey" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Foley Dorsey: Plates/Meter</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TheoreticalPlates_EP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="TheoreticalPlates_USP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="TheoreticalPlates_JP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="TheoreticalPlates_AOH" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="TheoreticalPlates_EMG" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Resolution_EP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Resolution5Sigma" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Resolution_USP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Resolution_USP_HH" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Resolution_AOH" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Resolution_DAB" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Resolution_JP" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Resolution_EMG" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="ResolutionStatistical" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Selectivity" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="Skew" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="TailingFactor" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Tailing factor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WidthBase" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak width.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Width2Sigma" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak width, at 60.7%.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Width3Sigma" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak width, at 32,4%.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Width4Sigma" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak width, at 13,4%.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Width5Sigma" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak width at 4,4%.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Width_5Perc" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Tailing peak width (USP).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Width_10Perc" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Width_50Perc" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Peak width at half height. ( USP, ESP)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WidthTangent" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Tangent peak width.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Noise" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Noise6Sigma" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="SignalToNoise" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="SignalToNoise6Sigma" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="SignalToNoiseUSP" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Signal to noise calculation from USP.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SignalToNoiseEP" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Signal to noise calculation from EP, based on blank run.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RSDPercent" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="DownInflectionBaselineTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="DownInflectionBaselineY" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="UpInflectionBaselineTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="UpInflectionBaselineY" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="DownSlopeSimilarity" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="UpSlopeSimilarity" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="InflectionTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="InflectionY" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="Asymmetry_10Perc" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Asymmetry_5SigmaPerc" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="LambdaMax" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="LambdaMin" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Wavelength with minimum absorption value of that peak in UV spectra.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SimilarityIndex" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="PeakValleyRatio" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="CentroidTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="Purity" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Result of standard ChemStation Purity calculation. Results of the EZChrom “TotalPurity” calculation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MSPurity" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Result of  MS Purity calculation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Sensitivity" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Result of UV purity "Sensitivity" calculation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ThreePointPurity" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Results of the EZChrom “3-Point Purity” calculation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PurityPassed" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Result of purity check.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MSPurityPassed" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Result of MS purity check.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BaselineModel" type="acaml:BaselineModelEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Type of baseline.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BaselineParameters" type="acaml:BaselineParametersType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Collection of baseline parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BaselineRetentionHeight" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Baseline height at RT of peak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UVSpectrumSearchResults" type="acaml:UVSpectrumSearchResultsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>UV Library search results.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MSSpectrumSearchResults" type="acaml:MSSpectrumSearchResultsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>MS Library search results.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="KovatsIndex" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The Kovats index is a special value calculated by some CDS systems and used to qualify a peak. A new field is required on the peak type entity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResponseRatio" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>For mult-signal methods, where multiple peaks are assigned to a compound: store the response ratio of a qualifier peak to the main peak of teh compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AssociatedSpectra" type="acaml:AssociatedSpectraType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep a set of associated spectra (signals).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FrontTangentSlope" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Coefficient used to calculate peak tangent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FrontTangentOffset" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Coefficient used to calculate peak tangent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TailTangentSlope" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Coefficient used to calculate peak tangent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TailTangentOffset" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Coefficient used to calculate peak tangent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="QualifierMass" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep mass for qualification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BasePeakMass" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keep base peak mass for qualification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RetentionTime2D" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Retention time of the peak in the second dimension column relative to the cut start time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ComplexCustomFields" type="acaml:ComplexCustomFieldsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Contain list of complex structured custom fields.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SimpleCustomFields" type="acaml:SimpleCustomFieldsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define set of simple (key, value)-pair custom fields.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TechSpec" type="acaml:PeakTechSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide technique-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PeakRefType">
		<xs:annotation>
			<xs:documentation>Reference to peak, which identifies compound.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="CalibrationCurve_ID" type="acaml:CalibrationCurveRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Link to used calibration-curve.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="calibPeakRole" type="acaml:CalibPeakRoleEnum">
					<xs:annotation>
						<xs:documentation>What kind of calibration peak is this?</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="qualifierPassed" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>If role = Qualifier: flag to determine, if qualifier is valid for usage.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="qualifierRatioRangeMax" type="xs:double">
					<xs:annotation>
						<xs:documentation>If role = Qualifier: max ratio range</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="qualifierRatioRangeMin" type="xs:double">
					<xs:annotation>
						<xs:documentation>If role = Qualifier: min ratio range</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="qualifierRatioRangeFitMode" type="acaml:QualifierRatioFitModeEnum">
					<xs:annotation>
						<xs:documentation>If role = Qualifier: ratio fit mode</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="VirtualPeakType">
		<xs:annotation>
			<xs:documentation>Describes virtual peak, which can be composed by real peaks. The ID (e.g. a guid) must be unique in scope of InjectionResult.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="Peak_ID" type="acaml:PeakRefType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of related peak-IDs, which define this virtual peak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Type" type="xs:string">
						<xs:annotation>
							<xs:documentation>Define type of peak (e.g. Grouped, Summed).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RetentionTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="Area" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="AreaPercent" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Height" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="HeightPercent" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="WidthBase" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="Symmetry" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="BeginTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="EndTime" type="acaml:TimePeriodType" minOccurs="0"/>
					<xs:element name="Baseline" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="BaselineStart" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="BaselineEnd" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="LevelStart" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="LevelEnd" type="acaml:DoubleUnitType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="VirtualPeakRefType">
		<xs:annotation>
			<xs:documentation>Reference to peak, which identifies compound.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:attribute name="calibPeakRole" type="acaml:CalibPeakRoleEnum">
					<xs:annotation>
						<xs:documentation>What kind of calibration peak is this?</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AssociatedSpectraType">
		<xs:annotation>
			<xs:documentation>Keep a set of spectra (signals).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Signal_ID" type="acaml:SignalRefType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Reference to associated spectrum (signal).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Baseline-->
	<xs:simpleType name="BaselineModelEnum">
		<xs:annotation>
			<xs:documentation>Define type of baseline.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Linear"/>
			<xs:enumeration value="Exponential"/>
			<xs:enumeration value="ExtendedExponential"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="BaselineParametersType">
		<xs:annotation>
			<xs:documentation>Collection of baseline parameters.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BaselineParameter" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>Define BaselineParameter1, BaselineParameter2, ..., BaselineParameterN.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--UV Spectrum Search Result-->
	<xs:complexType name="UVSpectrumSearchResultsType">
		<xs:annotation>
			<xs:documentation>Keep all search results from external UV libraries.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UVSpectrumLibrary" type="acaml:UVSpectrumLibraryType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>UV Library</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UVSpectrumLibraryType">
		<xs:annotation>
			<xs:documentation>Describe external search library.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LibraryName" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Name of search library.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LibraryPath" type="acaml:UriStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Location/path of search library.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UVSpectrumHit" type="acaml:UVSpectrumLibraryHitType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of hit from UV spectrum library.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UVSpectrumLibraryHitType">
		<xs:annotation>
			<xs:documentation>Describe library search hit for spectra.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LibraryID" type="acaml:IntegerType">
				<xs:annotation>
					<xs:documentation>Key of library spectrum.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LibraryCompoundName" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Compound name of library spectrum.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatchNumber" type="acaml:IntegerType"/>
			<xs:element name="Similarity" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>Similarity of the spectrum in the library compared to the peak spectrum. In ChemStation: Match Factor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AboveThreshold" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Flag, if search result is above defined threshold of the library search.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetentionTime" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>RT of the ref spectrum in the library.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReferenceSubtractionMode" type="acaml:NameStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines, if and how a reference spectrum is subtracted (e.g. None, Automatic, Spectrum at time… etc).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--MS Spectrum Search Result-->
	<xs:complexType name="MSSpectrumSearchResultsType">
		<xs:annotation>
			<xs:documentation>Keep all search results from external MS libraries.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MSSpectrumLibrary" type="acaml:MSSpectrumLibraryType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>MS Library</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MSSpectrumLibraryType">
		<xs:annotation>
			<xs:documentation>Describe external search library.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LibraryName" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Name of search library.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LibraryPath" type="acaml:UriStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Location/path of search library.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MSSpectrumHit" type="acaml:MSSpectrumLibraryHitType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of hit from MS spectrum library.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MSSpectrumLibraryHitType">
		<xs:annotation>
			<xs:documentation>Describe library search hit for spectra.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LibraryID" type="acaml:IntegerType">
				<xs:annotation>
					<xs:documentation>Key of library spectrum.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LibraryCompoundName" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Compound name of library spectrum.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatchNumber" type="acaml:IntegerType"/>
			<xs:element name="UserCompoundName" type="acaml:NameStringType" minOccurs="0"/>
			<xs:element name="ReverseMatchNumber" type="acaml:IntegerType" minOccurs="0"/>
			<xs:element name="ProbabilityPercent" type="acaml:DoubleType" minOccurs="0"/>
			<xs:element name="CASNumber" type="acaml:NameStringType" minOccurs="0"/>
			<xs:element name="LibaryNumber" type="acaml:IntegerType" minOccurs="0"/>
			<xs:element name="LibrarySpectrumRefType" type="acaml:IntegerType" minOccurs="0"/>
			<xs:element name="LibrarySpectrumRefLib" type="acaml:IntegerType" minOccurs="0"/>
			<xs:element name="LibrarySpectrumRefLoc" type="acaml:IntegerType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Spectrum.-->
	<xs:simpleType name="SpectrumExprTypeEnum">
		<xs:annotation>
			<xs:documentation>Define expression of spectrum (apex ='PeakTop', slope, ...).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Upslope1"/>
			<xs:enumeration value="Upslope2"/>
			<xs:enumeration value="Downslope1"/>
			<xs:enumeration value="Downslope2"/>
			<xs:enumeration value="PeakBegin"/>
			<xs:enumeration value="Apex"/>
			<xs:enumeration value="SmallPeakTop"/>
			<xs:enumeration value="PeakEnd"/>
			<xs:enumeration value="PeakAll"/>
			<xs:enumeration value="Valley"/>
			<xs:enumeration value="ForceBaseline"/>
			<xs:enumeration value="Periodic"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SpectrumTypeEnum">
		<xs:annotation>
			<xs:documentation>Define type of spectrum (Mass, UV/Vis, ...).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Unspecified"/>
			<xs:enumeration value="Mass"/>
			<xs:enumeration value="UVVis"/>
			<xs:enumeration value="Emission"/>
			<xs:enumeration value="Excitation"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SpectrumType">
		<xs:annotation>
			<xs:documentation>Define spectrum data.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericNonVersionedObjectType">
				<xs:sequence>
					<xs:element name="Type" type="acaml:SpectrumTypeEnum">
						<xs:annotation>
							<xs:documentation>Type of spectrum (Mass, UV/Vis, ...).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExprType" type="acaml:SpectrumExprTypeEnum">
						<xs:annotation>
							<xs:documentation>Expression type (Apex, Slope, ...).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RetentionTime" type="acaml:TimePeriodType">
						<xs:annotation>
							<xs:documentation>Retention time of spectrum.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WaveLength" type="acaml:DoubleUnitType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Wave lengths, collected in the spectrum.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Signal_ID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>FK to related signal object, from which spectrum slice was taken.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SpectrumRefType">
		<xs:annotation>
			<xs:documentation>Reference to spectrum, which identifies compound.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Compound identification.-->
	<xs:complexType name="MissingQualifierType">
		<xs:annotation>
			<xs:documentation>Define missing qualifier.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SignalName" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Name of signal, where qualifier was expected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Mass" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>Mass of expected qualifier peak.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QualifiedInjectionCompoundIdentificationType">
		<xs:annotation>
			<xs:documentation>Describe type for compound-identification by well known criteria (peak, spectrum).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Peaks" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Peaks, which are used to identify this compound.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Peak_ID" type="acaml:PeakRefType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Collection of related peaks, which identify this compound.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:key name="UK_CompoundIdentification_Peaks_IDs">
					<xs:annotation>
						<xs:documentation>Avoid duplicates in Peak_ID-collection.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:Peak_ID"/>
					<xs:field xpath="@id"/>
				</xs:key>
			</xs:element>
			<xs:element name="VirtualPeaks" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Virtual peaks, which are used to identify this compound.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="VirtualPeak_ID" type="acaml:VirtualPeakRefType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Collection of related virtual peak-IDs, which identify this  compound.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:key name="UK_CompoundIdentification_VirtualPeak_IDs">
					<xs:annotation>
						<xs:documentation>Avoid duplicates in VirtualPeak_ID-collection.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:VirtualPeaks_ID"/>
					<xs:field xpath="@id"/>
				</xs:key>
			</xs:element>
			<xs:element name="Spectra" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Spectra, which are used to identify this compound.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Spectrum_ID" type="acaml:SpectrumRefType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Collection of spectrum-slice-IDs.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:key name="UK_CompoundIdentification_Spectrum_IDs">
					<xs:annotation>
						<xs:documentation>Avoid duplicates in SpectrumSlice_ID-collection.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:Spectrum_ID"/>
					<xs:field xpath="@id"/>
				</xs:key>
			</xs:element>
			<xs:element name="InjectionCompounds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Injection-compounds, which are used to identify this compound.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="InjectionCompound_ID" type="acaml:InjectionCompoundRefType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Collection of related injection-compounds, which identify this compound.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:key name="UK_CompoundIdentification_InjectionCompound_IDs">
					<xs:annotation>
						<xs:documentation>Avoid duplicates in Compound_ID-collection.</xs:documentation>
					</xs:annotation>
					<xs:selector xpath="./acaml:InjectionCompound_ID"/>
					<xs:field xpath="@id"/>
				</xs:key>
			</xs:element>
			<xs:element name="MissingQualifiers" minOccurs="0">
				<xs:annotation>
					<xs:documentation>All missing qualifiers (qualifier peak was expected, but not found in specific signal).</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="MissingQualifier" type="acaml:MissingQualifierType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InjectionCompoundIdentificationType">
		<xs:annotation>
			<xs:documentation>Contain information, which is used to identify a compound</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:annotation>
				<xs:documentation>Provide a qualified or generic identification. The qualified identification provides a typed set of criteria. The generic identification only establishes a link to the signal.</xs:documentation>
			</xs:annotation>
			<xs:element name="Qualified" type="acaml:QualifiedInjectionCompoundIdentificationType">
				<xs:annotation>
					<xs:documentation>Identify compound by qualified criteria.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<!---->
	<!--Time Ranges-->
	<xs:complexType name="TimeRangeType">
		<xs:annotation>
			<xs:documentation>Define range of time.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BeginTime" type="acaml:TimePeriodType">
				<xs:annotation>
					<xs:documentation>Start time of the time range for a summary or group compound.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndTime" type="acaml:TimePeriodType">
				<xs:annotation>
					<xs:documentation>End time of the time range for a summary or group compound.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Qualifier Results-->
	<xs:simpleType name="QualifierRatioFitModeEnum">
		<xs:annotation>
			<xs:documentation>Define qualifier range matching result enum.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="RatioRangeOk"/>
			<xs:enumeration value="RatioRangeBelow"/>
			<xs:enumeration value="RatioRangeAbove"/>
			<xs:enumeration value="PeakNotFound"/>
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--Injection-compound.-->
	<xs:simpleType name="InjectionCompoundQuantitationTypeEnum">
		<xs:annotation>
			<xs:documentation>Define quantitation-type for compound.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Area"/>
			<xs:enumeration value="Height"/>
			<xs:enumeration value="Count"/>
			<xs:enumeration value="AreaPerc"/>
			<xs:enumeration value="HeightPerc"/>
			<xs:enumeration value="LogArea"/>
			<xs:enumeration value="LogHeight"/>
			<xs:enumeration value="CustomExpression"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ResponseFactorCalcModeEnum">
		<xs:annotation>
			<xs:documentation>Enum for different calculation-types for response factor.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="AmountPerResponse"/>
			<xs:enumeration value="ResponsePerAmount"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SpectraConfirmResultEnum">
		<xs:annotation>
			<xs:documentation>Allow to mark compounds as found but not confirmed (UV).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Confirmed"/>
			<xs:enumeration value="NotConfirmed"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="InjectionCompoundType">
		<xs:annotation>
			<xs:documentation>Local compound under injection, to establish link between multiple peaks and a real compound-object. The ID (like e.g. a guid) must be unique in scope of InjectionResult.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:GenericNonVersionedObjectType">
				<xs:sequence>
					<xs:element name="CompoundName" type="acaml:CommonStringType">
						<xs:annotation>
							<xs:documentation>Name of compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Identification" type="acaml:InjectionCompoundIdentificationType">
						<xs:annotation>
							<xs:documentation>Identifiers of compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Type" type="acaml:CompoundTypeEnum">
						<xs:annotation>
							<xs:documentation>Type of compound (Expected, PeaksSum, Group, ...).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Amount" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Quantitation results (may be concentration or amount) for this compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NormAmount" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Normalized amount.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Area" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Area attributed to the composite compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CorrectedArea" type="acaml:DoubleType" minOccurs="0"/>
					<xs:element name="Height" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Height attributed to the compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResponseFactor" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Response Factor Quotient. Calculation defined by 'ResponseFactorCalcMode'.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResponseFactorCalcMode" type="acaml:ResponseFactorCalcModeEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define, how 'ResponseFactor' was calculated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AverageResponseFactor" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Avg. Response Factor Quotient. Calculation defined by 'ResponseFactorCalcMode'.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResponseCorrectionFactor" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>When setting up a method where some compound use the curve of another compound the user can setup a response correction factor for each compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UsedInternalStandard" type="acaml:StandardCompoundIdentifierType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Collection of used ISTD (Name, Number  or Links).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LOD" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Limit of Detection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LOQ" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Limit of  Quantitation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CalibWeight" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Calibration weight.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CalibMarginPercent" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Calibration Margin in %.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Concentration" type="acaml:DoubleUnitType" minOccurs="0"/>
					<xs:element name="LowConcentration" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Lower amount limit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HighConcentration" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Upper amount limit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NormConcentration" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Normalized concentration</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="QuantitationType" type="acaml:InjectionCompoundQuantitationTypeEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Quantitation data type for this compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExpectedRetTime" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Expected retention time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CorrExpectedRetTime" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keeps the corrected expected RT which was calculated by another algorithm (e.g. time ref peak shift).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Multiplier" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Individual, compound-specific multiplier whose use is defined by the application.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IsInternalStandard" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Is this compound used as an internal?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IsTimeRef" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Is this compound used as a time reference?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LowerAmountLimit" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Low amount limit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UpperAmountLimit" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>High amount limit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CalibrationCurve_ID" type="acaml:CalibrationCurveRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Link to used calibration curve, when compound is e.g. from type 'PeakSum'.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CalibrationAmount" type="acaml:DoubleUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Only written for samples of type “Calibration Standard”.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExpectedSignal" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Signal name or description as setup in the calibration table to identify the compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Comment" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keeps comment either entered by a user or calculated by an algorithm (e.g. error information) for a specific compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimeRange" type="acaml:TimeRangeType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Store one or multiple time ranges for a single group compound.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SpectraConfirmResult" type="acaml:SpectraConfirmResultEnum" minOccurs="0">
						<xs:annotation>
							<xs:documentation>UV Spectra: allow to mark compound as found but not confirmed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SpectraConfirmMatchFactor" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>UV Spectra: store confirmation match factor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Dimension" type="acaml:IntegerType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The dimension to which this signal belongs. (1 => 1st dimension (default), 2 => 2nd dimension (e.g. 2D-LC heart cuts))</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExpectedRetTime2D" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Expected retention time in the second dimension column relative to the cut start time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CorrExpectedRetTime2D" type="acaml:TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keeps the corrected expected RT in the second dimension column relative to the cut start time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TechSpec" type="acaml:InjectionCompoundTechSpecType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provide technique-specific information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InjectionCompoundRefType">
		<xs:annotation>
			<xs:documentation>Reference to injection-compound, which identifies compound.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Custom Calculation Results (CCR)-->
	<xs:complexType name="CustomCalcResultsType">
		<xs:annotation>
			<xs:documentation>CCR Storage</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="ExternalResults" type="acaml:CustomCalcExternalResultsType">
				<xs:annotation>
					<xs:documentation>Define external storage of CCR.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EmbeddedResult" type="acaml:CustomCalcEmbeddedResultType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Define embedded storage of CCR.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="CustomCalcEmbeddedResultType">
		<xs:annotation>
			<xs:documentation>CC Embedded Storage.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Result" type="acaml:CustomCalcResultType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>CCR Result value. Populated by specialized result types, which inherit from this base type.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="parent_id" type="acaml:KeyIdType" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier of ACAML parent object,</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="parent_ver" type="acaml:KeyVersionType">
			<xs:annotation>
				<xs:documentation>Unique version of ACAML parent object, if parent has 2-dim key.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CustomCalcExternalResultsType">
		<xs:annotation>
			<xs:documentation>CCR External Storage</xs:documentation>
		</xs:annotation>
		<xs:attribute name="path" type="acaml:UriStringType" use="required">
			<xs:annotation>
				<xs:documentation>Path to external ACAML with CCR.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CustomCalcResultType" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for specialized CCR result types.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Information" type="acaml:CustomCalcInformationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Keep additional information regarding specific CCR (e. g.info or warning text/code).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="acaml:String50Type" use="required">
			<xs:annotation>
				<xs:documentation>Display name, shown in UI, maybe localized. Defined by user.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="unit" type="acaml:String30Type" use="optional">
			<xs:annotation>
				<xs:documentation>Unit of CCR value (textual representation).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="id" type="acaml:String30Type" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier of CCR, not localized. Don't confuse this with ACAML parent ID.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="description" type="acaml:DescriptionStringType" use="optional">
			<xs:annotation>
				<xs:documentation>Description of values.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CustomCalcDateResultType">
		<xs:annotation>
			<xs:documentation>CCR date and time value.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:CustomCalcResultType">
				<xs:attribute name="value" type="xs:dateTime" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CustomCalcFloatResultType">
		<xs:annotation>
			<xs:documentation>CCR float value.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:CustomCalcResultType">
				<xs:attribute name="value" type="xs:float" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CustomCalcDoubleResultType">
		<xs:annotation>
			<xs:documentation>CCR double value.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:CustomCalcResultType">
				<xs:attribute name="value" type="xs:double" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CustomCalcIntegerResultType">
		<xs:annotation>
			<xs:documentation>CCR integer value.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:CustomCalcResultType">
				<xs:attribute name="value" type="xs:integer" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CustomCalcBooleanResultType">
		<xs:annotation>
			<xs:documentation>CCR boolean value.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:CustomCalcResultType">
				<xs:attribute name="value" type="xs:boolean" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CustomCalcTextResultType" block="">
		<xs:annotation>
			<xs:documentation>CCR text (string) value.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:CustomCalcResultType">
				<xs:attribute name="value" type="acaml:String50Type" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CustomCalcInformationType">
		<xs:annotation>
			<xs:documentation>Keep additional information regarding specific CCR (e. g.info or warning text/code).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Keep numerical code to describe specific information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="acaml:String100Type" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Keep one on more text lines, to describe information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Background Subtraction-->
	<xs:simpleType name="BackgroundSubtractionModeEnum">
		<xs:annotation>
			<xs:documentation>Define method of background subtraction.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="TakeFromMethod"/>
			<xs:enumeration value="LastBlank"/>
			<xs:enumeration value="ExplicitWithinSequence"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="BackgroundSubtractionType">
		<xs:annotation>
			<xs:documentation>Define settings for background subtraction.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SubtractionMode" type="acaml:BackgroundSubtractionModeEnum">
				<xs:annotation>
					<xs:documentation>Define method, how subtraction is done.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReferenceSignal" type="acaml:BackgroundSubtractionReferenceSignalType">
				<xs:annotation>
					<xs:documentation>Define, which signals must be used for subtraction.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BackgroundSubtractionReferenceSignalType">
		<xs:annotation>
			<xs:documentation>Define, which reference signals will be used for subtraction.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="InjectionMeasData_ID" type="acaml:InjectionMeasDataRefType">
				<xs:annotation>
					<xs:documentation>Point to internal injection, from which the reference signals will be taken.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalReferenceDescription" type="acaml:DescriptionStringType">
				<xs:annotation>
					<xs:documentation>Describe external reference signal.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BackgroundSubtractionSignalType">
		<xs:annotation>
			<xs:documentation>Define, which signals are used for subtraction</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Signal_ID" type="acaml:SignalRefType">
				<xs:annotation>
					<xs:documentation>Link to internal signal.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalSignal" type="acaml:BackgroundSubtractionExternalSignalType">
				<xs:annotation>
					<xs:documentation>Link to external signal.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BackgroundSubtractionExternalSignalType">
		<xs:annotation>
			<xs:documentation>Define external signal for background subtraction.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Filename" type="acaml:UriStringType">
				<xs:annotation>
					<xs:documentation>Name of external file, which contains the specific signal (e.g. .dx-file).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TraceID" type="acaml:NameStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Use to uniquely reference a specific signal (trace) in a single raw data file like EZChrom.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Processing Steps-->
	<xs:complexType name="ProcessingStepType">
		<xs:annotation>
			<xs:documentation>Define settings for processing step.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="acaml:NameStringType">
				<xs:annotation>
					<xs:documentation>Define name for processing step</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Parameter" type="acaml:XmlAnyType">
				<xs:annotation>
					<xs:documentation>Define parameters for processing step</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Sample Container-->
	<xs:complexType name="SampleContainerInfoType">
		<xs:annotation>
			<xs:documentation>Contains reference to container info xml which contains device and container infos in chem station format</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="FilePath" type="acaml:UriStringType">
						<xs:annotation>
							<xs:documentation>Path and name of external xml-file.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SampleContainerInfoRefType">
		<xs:annotation>
			<xs:documentation>Define reference to specific sample container infos.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:VersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SampleLocationIdentifierType">
		<xs:annotation>
			<xs:documentation>Define identifier for sample location as returned by location string parser.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LocationXML" type="acaml:XmlAnyType">
				<xs:annotation>
					<xs:documentation>Segmented location string formatted as XML</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Actions-Section.-->
	<xs:complexType name="ActionsType">
		<xs:sequence>
			<xs:element name="ActionSetup" type="acaml:ActionSetupType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ActionSetupType">
		<xs:choice>
			<xs:element name="InjectionReportAction" type="acaml:InjectionReportActionType" minOccurs="0"/>
		</xs:choice>
	</xs:complexType>
	<!---->
	<!--Sequence Summary Report-->
	<xs:complexType name="InjectionReportActionType">
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="PredecessorInjection_ID" type="acaml:InjectionMeasDataRefType">
						<xs:annotation>
							<xs:documentation>FK to last injection which is valid for this report</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReportSettings" type="acaml:ReportSettingsType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ReportSettingsType">
		<xs:annotation>
			<xs:documentation>Collect information that allows to create or to re-generate summary reports created during acquisition.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="ReportTemplate" type="acaml:UriStringType">
						<xs:annotation>
							<xs:documentation>Path and name of report template.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LabelSearchString" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Search string for labels(s) of injections in report</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReportFileName" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Target report file name w/o path</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReportFormats" type="acaml:CommonStringType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Export format</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PrinterName" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the printer</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--******************************************* ACAML Technology Specific Objects ******************************************* -->
	<!---->
	<xs:complexType name="MethodTechSpecType">
		<xs:sequence>
			<xs:element name="CE" type="acaml:CEMethodType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SampleSetupContextTechSpecType">
		<xs:sequence>
			<xs:element name="LC" type="acaml:LCSampleContextSetupType">
				<xs:annotation>
					<xs:documentation>Liquid Chromatography</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SampleSetupTechSpecType">
		<xs:annotation>
			<xs:documentation>Keep sample setup technology specific information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CE" type="acaml:CESampleSetupType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CE specific data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MS" type="acaml:MSSampleSetupType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>MS specific data.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InjectionMeasDataTechSpecType">
		<xs:sequence>
			<xs:element name="LC" type="acaml:LCInjectionMeasDataType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SignalTechSpecType">
		<xs:sequence>
			<xs:element name="MS" type="acaml:MSSignalType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>MS technology specific extensions for Signal.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InjectionResultTechSpecType">
		<xs:annotation>
			<xs:documentation>Keep injection result technology specific information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CE" type="acaml:CEInjectionResultType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CE specific.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GE" type="acaml:GEInjectionResultType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>GE technology specific extensions for InjectionResult.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MS" type="acaml:MSInjectionResultType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>MS technology specific extensions for InjectionResult.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InjectionCompoundTechSpecType">
		<xs:sequence>
			<xs:element name="MS" type="acaml:MSInjectionCompoundType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>MS technology specific extensions for InjectionCompound.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GE" type="acaml:GEInjectionCompoundType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>GE technology specific extensions for InjectionCompound.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PeakTechSpecType">
		<xs:sequence>
			<xs:element name="CE" type="acaml:CEPeakType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CE technology specific extensions for peak.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MS" type="acaml:MSPeakType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>MS technology specific extensions for Peak.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GE" type="acaml:GEPeakType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>GE technology specific extensions for Peak.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Technique-Specific: Entity Subtypes for Liquid-Chromatography (LC).-->
	<xs:complexType name="LCSampleContextSetupType">
		<xs:annotation>
			<xs:documentation>Technique-specific setup-information for Liquid-Chromatography (LC).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FractionStartLocation" type="acaml:VialNumberType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LCInjectionMeasDataType">
		<xs:annotation>
			<xs:documentation>Technique-specific data-information for Liquid-Chromatography (LC).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Fraction" type="acaml:LCFractionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Collection of fractions of this injection.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LCFractionType">
		<xs:annotation>
			<xs:documentation>Describe fraction-based-data for Liquid-Chromatography (LC)..</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NamedGenericVersionedObjectType">
				<xs:sequence>
					<xs:element name="Number" type="acaml:IntegerType"/>
					<xs:element name="Location" type="acaml:VialNumberType"/>
					<xs:element name="StartTime" type="acaml:TimePeriodType">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTime" type="acaml:TimePeriodType">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name="Volume" type="acaml:DoubleUnitType"/>
					<xs:element name="Reason" type="acaml:DescriptionStringType"/>
					<xs:element name="Well" type="acaml:NameStringType"/>
					<xs:element name="Mass" type="acaml:CommonStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Trigger Mass if mass based fraction collection was used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Purity" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Keeps the calculated purity value for the fraction.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!---->
	<!--Technique-Specific: Entity Subtypes for Capillary Electrophoresis (CE).-->
	<xs:complexType name="CEMethodType">
		<xs:annotation>
			<xs:documentation>Technique specific method information for Capillary Electrophoresis (CE).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Mobility" type="acaml:CommonStringType">
				<xs:annotation>
					<xs:documentation>What type of CE mobility correction is applied. Expected values are "NO" (no correction), "EFF"
(based on effective mobility calculation) or "REL" (relative mobility calculation).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CESampleSetupType">
		<xs:annotation>
			<xs:documentation>Technique specific sample setup information for Capillary Electrophoresis (CE).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Voltage" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Voltage of the system when sample is injected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserVariables" type="acaml:ComplexCustomFieldsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CE allows to define user variable instrument set points.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CEInjectionResultType">
		<xs:annotation>
			<xs:documentation>Technique specific injection result information for Capillary Electrophoresis (CE).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IsAreaCorrected" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Is the Peak Area of a CE peak corrected or not.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CEPeakType">
		<xs:annotation>
			<xs:documentation>Technique specific result information for Capillary Electrophoresis (CE).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ExpMobility" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Expected mobility.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MeasMobility" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store effective mobility.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApparentMobility" type="acaml:DoubleUnitType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Store apparent mobility</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Technique-Specific: Entity Subtypes for Mass Spec (MS).-->
	<xs:complexType name="MSPeakType">
		<xs:annotation>
			<xs:documentation>MS technology specific extensions for Peak.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AutomassLow" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Would be calculated by specific algorithm, determines spectrum range to display for a specific peak (CS does not calculate yet). Will be used top auto scale spectrum x axis for a specific peak.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AutomassHigh" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Would be calculated by specific algorithm, determines spectrum range to display for a specific peak (CS does not calculate yet). Will be used top auto scale spectrum x axis for a specific peak.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CrossSignalAreaPercent" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Area% calculated across signals for a (aligned) peak (typically signal from UV vs. Signal from MSD).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PurityReportValueMS" type="acaml:MSPurityReportValueEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Result of purity calculation with MS and UV.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PurityReportValueLC" type="acaml:MSPurityReportValueEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Result of purity calculation with LC and UV.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalIonCurrent" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sum off all of the ions intensities, in a spectrum for that peak.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MSSampleSetupType">
		<xs:annotation>
			<xs:documentation>Technique specific sample setup information for Mass Spec (MS).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SamplePuritySetup" type="acaml:MSSamplePuritySetupType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Sample Purity Definitions</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="MSFoundPolarityEnum">
		<xs:annotation>
			<xs:documentation>Defines at which polarity the compound was detected.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Positive"/>
			<xs:enumeration value="Negative"/>
			<xs:enumeration value="PositiveAndNegative"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MSFoundEnum">
		<xs:annotation>
			<xs:documentation>Defines the state of how the compound was found and / or confirmed.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="FoundConfirmed"/>
			<xs:enumeration value="Found"/>
			<xs:enumeration value="NotFound"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="MSInjectionCompoundType">
		<xs:annotation>
			<xs:documentation>MS technology specific extensions for InjectionCompound.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MolFormula" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Molecular (chemical) formula.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MonoIsotopicMass" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Calculated by processing software from molecular formula or input by user.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Found" type="acaml:MSFoundEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines at which polarity the compound was detected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FoundPolarity" type="acaml:MSFoundPolarityEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines at which polarity the compound was detected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FoundDescription" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If compound was found text gives why and how information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Purity" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Purity of the compound (not peak!) calculated during processing using UV and MS spectra information (multiple peaks).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PurityBaseSignalDescription" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Text describing the base signal used for purity calculation e.g.: “DAD1A” or  “DAD1A(50%) + DAD1B(10%)”.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpectraConfirmResult" type="acaml:SpectraConfirmResultEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation>MS Spectra: allow to mark compound as found but not confirmed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpectraConfirmMatchFactor" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>MS Spectra: store confirmation match factor.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="MSPurityReportValueEnum">
		<xs:annotation>
			<xs:documentation>Defines result of purity calculation with LC/MS and UV.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Good"/>
			<xs:enumeration value="Mix"/>
			<xs:enumeration value="Noisy"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MSIonPolarityEnum">
		<xs:annotation>
			<xs:documentation>Definition for IonPolarity.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Positive"/>
			<xs:enumeration value="Negative"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MSStorageModeEnum">
		<xs:annotation>
			<xs:documentation>Defines how spectra for the MS signal file are stored.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Continuous"/>
			<xs:enumeration value="Centroid"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="MSSignalType">
		<xs:annotation>
			<xs:documentation>MS technology specific extensions for Signal.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IonPolarity" type="acaml:MSIonPolarityEnum">
				<xs:annotation>
					<xs:documentation>Polarity of the signal.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScanType" type="acaml:CommonStringType">
				<xs:annotation>
					<xs:documentation>Defines the scan type like: EIC, TIC, SIM, BPC.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IonizationMode" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines how ions have been created. E.g. ESI, APCI, MULTI </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FragmentorVoltage" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Voltage of the fragmentor in the MS source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StorageMode" type="acaml:MSStorageModeEnum">
				<xs:annotation>
					<xs:documentation>Defines how spectra for the .MS signal file are stored. This information is required to correctly draw the spectra in the spectra plot.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaximumIonIntensity" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Max off all of the ions intensities in the whole 3D matrix.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MSSamplePuritySetupType">
		<xs:annotation>
			<xs:documentation>MS Sample Purity Setup</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="TargetName" type="acaml:NameStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>MS Target Name (optional)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TargetMass" type="acaml:DoubleType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define a mass.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TargetFormula" type="acaml:DescriptionStringType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define a formula.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MSSamplePuritySetupRefType">
		<xs:annotation>
			<xs:documentation>MS Sample Purity Setup Reference</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MSSamplePurityResultType">
		<xs:annotation>
			<xs:documentation>MS Sample Purity Result</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="acaml:NonVersionedObjectBaseType">
				<xs:sequence>
					<xs:element name="MSSamplePuritySetup_ID" type="acaml:MSSamplePuritySetupRefType">
						<xs:annotation>
							<xs:documentation>Reference to related Sample Purity Setup object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TargetFound" type="xs:boolean"/>
					<xs:element name="TargetPure" type="xs:boolean"/>
					<xs:element name="SamplePurity" type="acaml:DoubleType"/>
					<xs:element name="Signal_ID" type="acaml:SignalRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Link to signal, on which base the purity was calculated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Peak_ID" type="acaml:PeakRefType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Link to peak, which represents the target.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MSInjectionResultType">
		<xs:annotation>
			<xs:documentation>MS technology specific extensions for InjectionResult.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SamplePurityResult" type="acaml:MSSamplePurityResultType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>MS Sample Purity Results</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!--Technique-Specific: Entity Subtypes for Gel Electrophoresis (GE).-->
	<xs:simpleType name="GEFragmentSizeUnitEnum">
		<xs:annotation>
			<xs:documentation>Defines units for fragment sizes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="bp"/>
			<xs:enumeration value="nt"/>
			<xs:enumeration value="kDa"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="GEFragmentSizeType">
		<xs:annotation>
			<xs:documentation>Define type to describe GE fragment sizes</xs:documentation>
		</xs:annotation>
		<xs:attribute name="val" type="xs:double" use="required"/>
		<xs:attribute name="unit" type="acaml:GEFragmentSizeUnitEnum"/>
	</xs:complexType>
	<xs:complexType name="GEInjectionCompoundType">
		<xs:annotation>
			<xs:documentation>GE technology specific extensions for InjectionCompound.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AverageSize" type="acaml:GEFragmentSizeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Fragment size of the compound (average calculation).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BeginSize" type="acaml:GEFragmentSizeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Fragment size at compound start.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndSize" type="acaml:GEFragmentSizeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Fragment size at compound end.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Size" type="acaml:GEFragmentSizeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Fragment size of the compound.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GEPeakType">
		<xs:annotation>
			<xs:documentation>GE technology specific extensions for Peak.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BeginRunDistance" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>Relative peak start position.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndRunDistance" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>Relative peak end position.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RunDistancePercentage" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Relative position of the peak</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GERegionType">
		<xs:annotation>
			<xs:documentation>Define GE smear region result.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="From" type="acaml:GEFragmentSizeType">
				<xs:annotation>
					<xs:documentation>Size at which the Region starts </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="To" type="acaml:GEFragmentSizeType">
				<xs:annotation>
					<xs:documentation>Size weight at which the Region ends.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AverageSize" type="acaml:GEFragmentSizeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Average size of the Region</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Concentration" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Concentration of the region.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Molarity" type="acaml:DoubleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Molarity of the region.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PercentTotalArea" type="acaml:DoubleType">
				<xs:annotation>
					<xs:documentation>Percentage of the total Signal Area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Comment" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Region comment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Observation" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Region observations.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GEInjectionResultType">
		<xs:annotation>
			<xs:documentation>GE technology specific extensions for InjectionResult.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Region" type="acaml:GERegionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Smear region results.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!---->
	<!---->
	<!--******************************************* ACAML Application Specific Objects *******************************************-->
	<!---->
	<xs:complexType name="InstrumentAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreInstrumentType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="MethodAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreMethodType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="SeparationMediumAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreSeparationMediumType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="SampleSetupContextAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreSampleSetupContextType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="SampleMeasDataContextAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreSampleMeasDataContextType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="SampleSetupAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreSampleSetupType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="SampleMeasDataAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreSampleMeasDataType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="InjectionMeasDataAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreInjectionMeasDataType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="InjectionResultAppSpecType">
		<xs:choice>
			<xs:element name="AgtChemStore" type="acaml:AgtChemStoreInjectionResultType"/>
		</xs:choice>
	</xs:complexType>
	<!---->
	<!--Application-Specific: Entity-Subtypes by Application "AgtChemStore".-->
	<!---->
	<!--Define common hash-value type.-->
	<xs:simpleType name="AgtChemStoreHashValueType">
		<xs:annotation>
			<xs:documentation>Define hash-value for Agilent ChemStore</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:base64Binary"/>
	</xs:simpleType>
	<!---->
	<xs:complexType name="AgtChemStoreInstrumentType">
		<xs:sequence>
			<xs:element name="Hostname" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="HashValue" type="acaml:AgtChemStoreHashValueType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgtChemStoreMethodType">
		<xs:sequence>
			<xs:element name="Hostname" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="ArchiveStatus" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="HashValue" type="acaml:AgtChemStoreHashValueType" minOccurs="0"/>
			<xs:element name="ChemStationRev" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Revision of ChemStation-software.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgtChemStoreSeparationMediumType">
		<xs:sequence>
			<xs:element name="HashValue" type="acaml:AgtChemStoreHashValueType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgtChemStoreSampleSetupContextType">
		<xs:sequence>
			<xs:element name="ChemStationRev" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Revision of ChemStation-software.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgtChemStoreSampleMeasDataContextType">
		<xs:sequence>
			<xs:element name="Hostname" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="ArchiveStatus" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="HashValue" type="acaml:AgtChemStoreHashValueType" minOccurs="0"/>
			<xs:element name="ChemStationRev" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Revision of ChemStation-software.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgtChemStoreSampleSetupType">
		<xs:sequence>
			<xs:element name="ChemStationRev" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Revision of ChemStation-software.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgtChemStoreSampleMeasDataType">
		<xs:sequence>
			<xs:element name="ChemStationRev" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Revision of ChemStation-software.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgtChemStoreInjectionMeasDataType">
		<xs:sequence>
			<xs:element name="MethodName" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="MethodPath" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="SequenceName" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="SequencePath" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="OperatorName" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="Hostname" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="ArchiveStatus" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="HashValue" type="acaml:AgtChemStoreHashValueType" minOccurs="0"/>
			<xs:element name="ChemStationRev" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Revision of ChemStation-software.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgtChemStoreInjectionResultType">
		<xs:sequence>
			<xs:element name="LimsApprovalStatus" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="Hostname" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="ArchiveStatus" type="acaml:CommonStringType" minOccurs="0"/>
			<xs:element name="HashValue" type="acaml:AgtChemStoreHashValueType" minOccurs="0"/>
			<xs:element name="ChemStationRev" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Revision of ChemStation-software.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternalID" type="acaml:CommonStringType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Keep internal database-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChemStationInternalType" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Original internal sample-type of ChemStation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
